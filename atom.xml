<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端小窝--&gt;小白之家</title>
  
  <subtitle>Do what u love,  love what u do .</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hezhaoxiang.work/"/>
  <updated>2020-09-07T19:05:43.216Z</updated>
  <id>https://hezhaoxiang.work/</id>
  
  <author>
    <name>He Zhaoxiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>美团实习总结--汇总</title>
    <link href="https://hezhaoxiang.work/2020/all/"/>
    <id>https://hezhaoxiang.work/2020/all/</id>
    <published>2020-08-25T13:41:00.000Z</published>
    <updated>2020-09-07T19:05:43.216Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="实习总结陈述"><a href="#实习总结陈述" class="headerlink" title="实习总结陈述"></a>实习总结陈述</h1><p><a name="Wx5kfFZM"></a></p><h1 id="一、个人信息"><a href="#一、个人信息" class="headerlink" title="一、个人信息"></a>一、个人信息</h1><table><thead><tr><th>姓名</th><th>贺</th><th>实习时间</th><th>2020.06.01 - 2020.08.20</th></tr></thead><tbody><tr><td>部门</td><td>交通事业部-终端研发中心</td><td>岗位</td><td>前端开发工程师</td></tr></tbody></table><p><a name="JezXs"></a></p><h1 id="二、工作成果"><a href="#二、工作成果" class="headerlink" title="二、工作成果"></a>二、工作成果</h1><p><a name="gph3tZe8"></a></p><h2 id="1-个人职责"><a href="#1-个人职责" class="headerlink" title="1. 个人职责"></a>1. 个人职责</h2><p>目前主要参与“薪火”–MBL相关的前端开发和版本迭代，具体为以下几个方面：</p><ul><li><p>使用element-ui、Echarts组件开发和迭代活动录入和策略看板的相关需求；<br /></p></li><li><p>通过git进行分支管理和代码提交；<br /></p></li><li><p>在cargo、plus环境发布dev、st环境并进行上线部署；<br /><br><a name="aIrx6khD"></a></p><h2 id="2-项目相关"><a href="#2-项目相关" class="headerlink" title="2. 项目相关"></a>2. 项目相关</h2><p>【项目名称】“薪火”数据平台–MBL主题<br><a name="h73iWqx3"></a></p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3></li><li><p>MBL主题是对多个打车平台的价格信息进行整理，并对其中原价、补贴和策略等信息进行对比分析；<br /></p></li><li><p>以上信息需要人工录入，并将这些信息充分价值化，以图表和日历的形式展现；<br /></p></li><li><p>活动策略提供了手动录入的页面，策略看板将价格等信息展示出来。<br /></p><table><thead><tr><th align="left">用户</th><th align="left">对MBL的整体诉求</th></tr></thead><tbody><tr><td align="left">老板</td><td align="left">整体价格竞争力、定价和补贴竞争力</td></tr><tr><td align="left">BA业务需求分析师</td><td align="left"><br />- 核心商是否调价、调价后的影响</td></tr></tbody></table></li><li><p>补贴层：竞对补贴构成及变化</p><p>|<br>| <strong>乘客运营</strong> | <br />- <strong>对外监控：竞对是否调价、调价前后竞争力是否有变化</strong></p></li><li><p><strong>营销层：竞对补贴变化趋势、活动玩法和内容</strong></p><p>|</p></li></ul><p><a name="2L6qC3lO"></a></p><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>对于活动录入</p><ul><li>营销录入：添加非结构化的活动信息，支持一次性批量录入活动的功能；<br /></li></ul><p>对于乘客策略看板</p><ul><li><p>量化原价竞争力：原价以折线图形式展示，分服务商和运输距离作对比；<br /></p></li><li><p>量化补贴竞争力：对补贴率作占比和时间趋势比较，直观展示补贴情况，<br /></p></li><li><p>统计活动策略：按活动类型以日历表形式展示各类活动的详情，全局展示营销活动情况；<br /><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1597744199717-5d699b78-0bc9-44a5-b964-93c7a1143d38.jpeg#align=left&display=inline&height=488&margin=%5Bobject%20Object%5D&name=%E6%80%9D%E8%B7%AFyuque_diagram.jpg&originHeight=488&originWidth=1112&size=69342&status=done&style=none&width=1112" alt="思路yuque_diagram.jpg">)<img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1597744218309-e028bc63-1ed0-40d3-88d4-06721bd6485a.png#align=left&display=inline&height=1179&margin=%5Bobject%20Object%5D&name=%E5%BD%95%E5%85%A5%E9%A1%B5%E9%9D%A2.png&originHeight=1179&originWidth=1920&size=568743&status=done&style=none&width=1920" alt="录入页面.png"></p></li><li><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1599504489987-26448901-58fd-4324-89fe-41343a0bc01b.png#align=left&display=inline&height=1547&margin=%5Bobject%20Object%5D&name=1echarts.png&originHeight=1547&originWidth=1689&size=435249&status=done&style=none&width=1689" alt="1echarts.png">)<img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1597744251582-aa0474a0-8f64-44c5-96ce-88a422c8feb0.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&name=table.png&originHeight=482&originWidth=1920&size=173750&status=done&style=none&width=696" alt="table.png"><br><a name="6fFNwfmG"></a></p><h3 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h3><p>1、技术方案</p></li><li><p>活动录入流程图<br />      <img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1597744551067-3c78011a-1390-42f4-bcad-5fa64972051a.jpeg#align=left&display=inline&height=2178&margin=%5Bobject%20Object%5D&name=%E5%A4%9A%E4%B8%AA%E6%B4%BB%E5%8A%A8%E5%BD%95%E5%85%A5.jpg&originHeight=2178&originWidth=1797&size=457813&status=done&style=none&width=1797" alt="多个活动录入.jpg"></p></li><li><p>原价和补贴图表流程图<br /></p></li><li><p>策略日历流程图<br /><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1597744560765-64d3a755-288c-49c3-9141-f8a48b4506ff.jpeg#align=left&display=inline&height=2110&margin=%5Bobject%20Object%5D&name=yuque_diagram.jpg&originHeight=2110&originWidth=2018&size=329093&status=done&style=none&width=2018" alt="yuque_diagram.jpg"></p></li></ul><p>2、技术难点</p><table><thead><tr><th align="left">难点</th><th align="left">解决方法</th></tr></thead><tbody><tr><td align="left">1、二级监听</td><td align="left"></td></tr><tr><td align="left">2、图片回显与删除</td><td align="left">原因： urls的索引index 为null，无法定位到哪个活动<br />解决： 在调用增加和删除方法前，先获取index，根据第几个活动，来删除图片;<br />获取index：click –&gt;mouseover;</td></tr><tr><td align="left">3、图表数据处理与列合并</td><td align="left"></td></tr></tbody></table><p>所遇问题</p><ul><li>对业务不熟悉，任务涉及的组件及其中变量的含义不了解；<br /></li><li>对开发过程中的常用工具和git操作不熟悉；<br /></li><li>前端功能开发过程中思路不开阔，对部分难点需求没有明确的实现思路和合理的解决方案；<br /></li><li>1，2个实际问题<br /></li></ul><p>解决方式</p><ul><li><p>根据url路径判断各组件的作用，学习代码时加注释；<br /></p></li><li><p>导师耐心讲解演示，自己总结使用方式并做笔记，在开发过程中一点点学习；<br /></p></li><li><p>对于难点需求，多查阅资料，参考项目中类似功能的实现方式，和导师沟通确定解决方案；功能实现过程中多查阅开发文档并合理的复用组件；<br /><br><a name="0iNBkVkc"></a></p><h3 id="结果与意义"><a href="#结果与意义" class="headerlink" title="结果与意义"></a>结果与意义</h3><p>活动策略录入方面</p></li><li><p>由单个活动录入变为一次性多城市、多个活动录入；提高了运营的手动录入效率；<br /></p></li></ul><p>策略看板方面</p><ul><li>以折线图、柱状图和日历的形式代替表格信息，更直观清晰的展示价格信息并作相关对比，全局展示活动情况；<br /></li></ul><p>业务价值：</p><ul><li>定价层面实现分城市、分服务商和滴滴快车的价格比对，方便估算原价竞争力；<br /></li><li>实现乘客动态策略和70%以上常规营销活动的信息采集结构化，目前此两类信息已经开始针对重点运营12城进行采集；<br /></li><li>动态策略支持分运距补贴率趋势分析；<br /></li><li>立减、套餐、充返活动等可实现日期对比，方便分析竞对活动的趋势变化；<br /></li></ul><p>学习</p><ul><li>加深了对前端工程化的理解，熟悉了项目开发的整个流程，包括前端页面开发、git推送、接口调试和上线部署等；<br /></li><li>对组件复用、阅读API手册更加重视，对element组件和Echarts组件更加熟悉，提高了参考文档进行开发的动手能力；<br /></li><li>学习了解决问题的思路，包括分析问题原因，通过console控制台排查问题，最后解决问题。<br /><br><a name="hrEFNfzo"></a><h2 id="3-总结梳理"><a href="#3-总结梳理" class="headerlink" title="3. 总结梳理"></a>3. 总结梳理</h2>1、开发流程和git代码管理 <a href="https://km.sankuai.com/page/405292350" target="_blank" rel="noopener">https://km.sankuai.com/page/405292350</a><br />2、活动录入总结和策略看板总结 <a href="https://km.sankuai.com/page/376855468" target="_blank" rel="noopener">https://km.sankuai.com/page/376855468</a><br />3、table日历合并 <a href="https://km.sankuai.com/page/405300642" target="_blank" rel="noopener">https://km.sankuai.com/page/405300642</a><br /></li></ul><p><a name="OSYTAuss"></a></p><h1 id="三、成长与收获"><a href="#三、成长与收获" class="headerlink" title="三、成长与收获"></a>三、成长与收获</h1><p>在这两个月的实习期间，我参与了每周的周会、需求评审和前端开发等环节，熟悉并使用了thrift、cargo、plus等开发和部署工具，听取了小组内的交流分享，和导师的定期交流指导也让我对自己有一个更清晰的认识，因此这段时间的收获我总结为以下几个方面：<br><a name="Bn1ZhNKR"></a></p><h2 id="（1）在业务方面"><a href="#（1）在业务方面" class="headerlink" title="（1）在业务方面"></a>（1）在业务方面</h2><ul><li><p>通过参与周会和组内分享，我对部门的业务有一个整体的认识，对自己负责的MBL主题有整体的认识和业务逻辑思路，根据功能需求能找到相应的实现思路和方案；<br /></p></li><li><p>MBL业务集中在定价、活动策略以及动态策略等信息的采集、展示和分析，采集包括手动录入、上传excel批量导入等多种录入方式，展示信息主要以列表和表格形式为主，分析主要针对价格和各种活动策略数据，以图表和日历等形式分维度进行展示对比，比较得出各自特点和优势；<br /><br><a name="9uw0kKMY"></a></p><h2 id="（2）在技术方面"><a href="#（2）在技术方面" class="headerlink" title="（2）在技术方面"></a>（2）在技术方面</h2></li><li><p>熟悉了从接口定义、前端开发、自测调试接口和数据、git代码推送以及发dev和st测试环境到上线发布的整个流程，加深了对git操作的理解；<br /></p></li><li><p>通过使用element组件和Echarts组件进行项目开发，对组件化封装和使用有了更深的认识，提高了自己查阅API文档进行开发的能力；<br /></p></li><li><p>对数据格式处理更加熟练，主要表现为对接口数据的格式转换，如对象与数组之间数据的转换、空数据补足、对象数据处理等；<br /><br><a name="N1JyWfvz"></a></p><h2 id="（3）在个人思考方面"><a href="#（3）在个人思考方面" class="headerlink" title="（3）在个人思考方面"></a>（3）在个人思考方面</h2></li></ul><table><thead><tr><th>优势</th><th>不足</th></tr></thead><tbody><tr><td><br />- 分析问题、解决问题的思路有所提升。在自测过程中出现问题，通过查看输出结果、查阅API文档等方式定位问题的原因，分析找出相应的解决方案，逐步提高了自己分析问题、解决bug的能力；</td><td></td></tr></tbody></table><p> | <br />- 知识体系不完善，基础知识还需继续补充。部门的业务中包含火龙果和观星台等，自己对于复杂业务和移动端的开发经验欠缺，这方面的相关知识也应在以后补充；</p><p> |<br>| <br />- 善于总结归纳。及时总结经验和遇到的问题，梳理技术方案、解决问题的方法和一些开发工具的使用，以文档形式产出，在下次的开发中避免相同的问题消耗时间；</p><p> | <br />- 对疑难问题的解决思路不够开阔，不易定位到问题的根本原因，需要多次尝试来解决问题。在实现table日历时，滚动条会部分遮挡最左一列的内容，多方尝试后发现是浏览器缩放的原因；</p><p> |<br>| <br />- 熟悉开发流程，能完成大部分功能开发。对MBL业务中涉及的需求能给出相应的技术方案，对于部分难点问题能找到相关的技术和实现思路；</p><p> |  |</p><p><a name="JvtxkxBT"></a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p><a name="T85C9"></a></p><h1 id="四、未来规划"><a href="#四、未来规划" class="headerlink" title="四、未来规划"></a>四、未来规划</h1><p><a name="A7KVyznv"></a></p><h2 id="（1）近期规划"><a href="#（1）近期规划" class="headerlink" title="（1）近期规划"></a>（1）近期规划</h2><p>业务方面：</p><ul><li>MBL后续业务也将围绕现有活动策略、定价策略等内容展开，包括OCR识别录入，新增对比分析等，主要实现思路是使用element组件或Echarts组件进行录入和相关内容展示分析；<br /></li><li>在后续参与需求评审时，尽可能给出详细技术方案和排期，留好buffer时间，保证开发如期进行；<br /></li></ul><p>技术方面：</p><ul><li><p>对MBL中v2.2开发中的问题和知识进行总结，夯实基础知识，加强对数据处理熟练程度；<br /></p></li><li><p>合理划分时间，在周末补充ES6、webpack等前端知识，完善知识体系，尽可能提前覆盖以后的业务需求；<br /><br><a name="RNXyxxND"></a></p><h2 id="（2）长期规划"><a href="#（2）长期规划" class="headerlink" title="（2）长期规划"></a>（2）长期规划</h2><p>前端能力模型</p></li><li><p>业务–技术方案体系：1-2年，持续性学习，不断给自己充电，衡量标准，在实现功能需求后及时总结，熟悉业务需求，形成自己的业务–技术方案体系，薪火，火龙果，移动端（观星台），湾流，可视化，css、 vue，node<br /></p></li><li><p>提高效率，保证效果：通过前端开发经验的积累，在以后的前端开发中能更加熟练的实现需求，减少查API手册和踩坑消耗的时间；<br /></p></li><li><p>承担需求，独当一面：3-5年，熟悉前端各项业务和技术方案，独立完成业务需求中的前端开发工作，解决业务中的关键问题，实现产品到价值的转换。<br /></p></li></ul><ol><li>职业素养提升<br /></li></ol><p>1、与后端和PM的沟通能力，日常汇报工作的表达能力；<br />2、巩固完善技术栈，提高前端开发能力；<br />3、划分工作时间，确定工作优先级，保证工作有序进行。<br /><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1599504637802-66b6d17f-b3ce-475c-a36c-8d9aaca2ed4c.jpeg#align=left&display=inline&height=448&margin=%5Bobject%20Object%5D&name=111.jpg&originHeight=448&originWidth=2063&size=124927&status=done&style=none&width=2063" alt="111.jpg"><br /><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1599504624255-39efd791-dac8-46dc-b5cb-8163d623bf29.jpeg#align=left&display=inline&height=682&margin=%5Bobject%20Object%5D&name=22222222222.jpg&originHeight=682&originWidth=1294&size=125002&status=done&style=none&width=1294" alt="22222222222.jpg"><br /><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1599504604077-83a99508-74d3-40b3-b44f-b904bb286293.jpeg#align=left&display=inline&height=445&margin=%5Bobject%20Object%5D&name=33333333.jpg&originHeight=445&originWidth=1504&size=91359&status=done&style=none&width=1504" alt="33333333.jpg"><br /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;实习总结陈述&quot;&gt;&lt;a href=&quot;#实习总结陈述&quot; class=&quot;headerlink&quot; title=&quot;实习总结陈述&quot;&gt;&lt;/a&gt;实习总结陈述&lt;/h1&gt;&lt;p&gt;&lt;a name=&quot;Wx5kfFZM&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;一、个人信息&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="美团实习" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="工作总结" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="实习" scheme="https://hezhaoxiang.work/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>美团实习总结二--活动录入总结</title>
    <link href="https://hezhaoxiang.work/2020/about-table/"/>
    <id>https://hezhaoxiang.work/2020/about-table/</id>
    <published>2020-08-10T14:02:00.000Z</published>
    <updated>2020-09-07T18:38:51.357Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="活动策略录入总结"><a href="#活动策略录入总结" class="headerlink" title="活动策略录入总结"></a>活动策略录入总结</h1><p>整体思路<br /><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1597743341009-929aba07-34cb-4eb5-900b-653f0c930d30.jpeg#align=left&display=inline&height=488&margin=%5Bobject%20Object%5D&name=%E6%80%9D%E8%B7%AFyuque_diagram.jpg&originHeight=488&originWidth=1112&size=69342&status=done&style=none&width=1112" alt="思路yuque_diagram.jpg"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1597743250732-75338b6c-f1dc-4778-9240-39f1565adbbe.png" alt=""><a name="8RBIS"></a></p><h1 id="（一）功能实现"><a href="#（一）功能实现" class="headerlink" title="（一）功能实现"></a>（一）功能实现</h1><p><a name="IIiYj"></a></p><h4 id="1、excel读取（学习）"><a href="#1、excel读取（学习）" class="headerlink" title="1、excel读取（学习）"></a>1、excel读取（学习）</h4><p>const fileConcent  = e.target.file[0]; //fileContent 为文件信息<br />const reader = new FileReader(); //读取文件方法<br />reader.readAsBinaryString(fileContent);//执行该方法时，自动触发onload，read结果放在wordbook中,workbook包含excel所有信息，如下图；<br /><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1594710995749-39f81070-d345-4cb8-9bfd-c821bf5faf03.png#align=left&display=inline&height=225&margin=%5Bobject%20Object%5D&name=image.png&originHeight=450&originWidth=1026&size=96232&status=done&style=none&width=513" alt="image.png"><br />把上图结果workbook转为json（sheet.to_json方法）<br /></p><p><a name="W5lw2"></a></p><h4 id="2、上传提示框-el-dialog"><a href="#2、上传提示框-el-dialog" class="headerlink" title="2、上传提示框 el-dialog"></a>2、上传提示框 el-dialog</h4><p><a name="gdMZP"></a></p><h4 id="3、批量删除"><a href="#3、批量删除" class="headerlink" title="3、批量删除"></a>3、批量删除</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1599503412187-3e32fcbb-ac18-4435-a34f-e05214531f1e.png#align=left&display=inline&height=113&margin=%5Bobject%20Object%5D&name=image.png&originHeight=225&originWidth=1017&size=36485&status=done&style=none&width=508.5" alt="image.png"><br /></p><p><a name="Gpmzn"></a></p><h4 id="4、数据校验"><a href="#4、数据校验" class="headerlink" title="4、数据校验"></a>4、数据校验</h4><ul><li><p>折扣输入框：一位数字–&gt;num*10; 输入长度maxlength&lt;=2;</p></li><li><p>el-input输入框属性  :rules=”[{type:array, required, message: “不可为空”}]”</p></li><li><p>提交时判断数字数字是否为空，为空则this.$message.error(‘’);<br><a name="81mi6"></a></p><h4 id="5、新建情况下“其他活动”"><a href="#5、新建情况下“其他活动”" class="headerlink" title="5、新建情况下“其他活动”"></a>5、新建情况下“其他活动”</h4><p>变化：单个活动变为-&gt;多个活动录入，<br />upload：上传图片<br />第一个其他活动使用原来的城市日期等<br /><br><br />其他活动，活动参数由对象变为对象数组，难点</p></li><li><p>添加日期、规则、上传图片等组件需要条件：判断type = 其他</p></li><li><p>使用新数组（对象–&gt;对象数组）保存信息，各个属性值与原来参数同，以v-for形式展示多个活动；</p></li><li><p>上传功能：el-upload组件，包含预览、保存url、多个图片、放大和删除</p></li><li><p>新增活动：日期城市名称等信息push进新数组，列表活动增加一个；</p></li><li><p>提交处理：数组遍历，每次提交一个对象信息，其中需要拆分城市id数组；</p></li></ul><p><br />查看和编辑状态–&gt;点击进入详情</p><ul><li>watch监听：如果为“其他”活动, 对象参数 -&gt;另一个对象数组中；</li></ul><p>查看：限制不可用<br />重新编辑：信息修改或增加活动</p><ul><li>再次提交时，根据活动id（后端产生，更新则有id，新增无id）区分为“更新”和“新增”，分开提交</li><li>图片回显，fileList将url以对象形式存储，能够在upload中展示；</li></ul><p><a name="nXvoC"></a></p><h4 id="6、活动录入流程图"><a href="#6、活动录入流程图" class="headerlink" title="6、活动录入流程图"></a>6、活动录入流程图</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1599503462965-e938fd38-7d69-46f2-a915-08508d1f6fb2.jpeg#align=left&display=inline&height=1742&margin=%5Bobject%20Object%5D&name=yuque_diagram.jpg&originHeight=1742&originWidth=1437&size=339678&status=done&style=none&width=1437" alt="yuque_diagram.jpg"><br /></p><p><a name="9g8jm"></a></p><h4 id="7、合并日历展示–table-难点"><a href="#7、合并日历展示–table-难点" class="headerlink" title="7、合并日历展示–table 难点"></a>7、合并日历展示–table 难点</h4><p>数据格式处理：按天数据（按列给数据）–&gt;按活动类型展示（分5行展示）；一个活动类型–&gt;多个活动（求最大行数）; 每一行活动内容相同<br />tableContent处理–5层循环：<br />第一层5个活动类型；<br />每个类型最大行数，行数for循环，每一行活动；<br />每一行每一个日期：<br />每一行不同日期的对比；<br />不同日期中一天的多个活动依次对比，相同则放入同一行，不同则进入下一行；<br /><br><br /><br><br />行合并：行列合并通过span-method实现，在第一列合并；maxlength为合并的行数；<br />列合并：难点在于多次合并列和合并位置不确定；<br /><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1596715336445-a45921c3-7c58-4a39-b14f-d67b9c561a5f.png#align=left&display=inline&height=568&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1464&originWidth=758&size=113270&status=done&style=none&width=294" alt="image.png">)<img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1597743104904-bc3f6b46-d5a9-4a18-b68f-16227d26410e.png#align=left&display=inline&height=563&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1158&originWidth=870&size=234338&status=done&style=none&width=423" alt="image.png"><br /></p><p><a name="TZQzw"></a></p><h4 id="8、数据处理思路"><a href="#8、数据处理思路" class="headerlink" title="8、数据处理思路"></a>8、数据处理思路</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1599503495658-3e0ef532-68c2-47b0-a3ee-a5202808f240.jpeg#align=left&display=inline&height=1688&margin=%5Bobject%20Object%5D&name=222.jpg&originHeight=1688&originWidth=1614&size=243527&status=done&style=none&width=1614" alt="222.jpg"><br><a name="kozoJ"></a></p><h1 id="（二）所遇问题及解决"><a href="#（二）所遇问题及解决" class="headerlink" title="（二）所遇问题及解决"></a>（二）所遇问题及解决</h1><table><thead><tr><th align="left">难点</th><th align="left">原因及解决</th></tr></thead><tbody><tr><td align="left">1、合并后省略号一直显示的问题</td><td align="left">原因：不能限制字符长度，限制会所以都省略；<br />解决：使用弹性盒子，只有内容过多时，才使用ellipsis省略号<br />display: -webkit-box;    /<em>作为弹性伸缩盒子模型显示</em>/<br />-webkit-line-clamp: 1;    /<em>显示的行数；如果要设置2行加…则设置为2</em>/<br />overflow: hidden;          /<em>超出的文本隐藏</em>/<br />text-overflow: ellipsis;    /* 溢出用省略号<em>/<br />-webkit-box-orient: vertical;    /*伸缩盒子的子元素排列：从上到下</em>/</td></tr><tr><td align="left">2、删除图片时urls不存在</td><td align="left">原因： urls的索引index 为null，无法定位到哪个活动<br />解决： 在调用增加和删除方法前，先获取index，根据第几个活动，来删除图片;<br />获取index：click –&gt;mouseover;</td></tr><tr><td align="left">3、第一次可以正常显示在最右侧，第二次位置不对，使用nexttick不起效果</td><td align="left">原因：第二次渲染滚动条位置，页面没渲染完，导致位置不对<br />解决： 使用setTimeOut</td></tr></tbody></table> <br />]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;活动策略录入总结&quot;&gt;&lt;a href=&quot;#活动策略录入总结&quot; class=&quot;headerlink&quot; title=&quot;活动策略录入总结&quot;&gt;&lt;/a&gt;活动策略录入总结&lt;/h1&gt;&lt;p&gt;整体思路&lt;br /&gt;&lt;img src=&quot;https://cdn.nlark.com
      
    
    </summary>
    
      <category term="美团实习" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="工作总结" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="实习" scheme="https://hezhaoxiang.work/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>美团实习总结一--Echarts看板总结</title>
    <link href="https://hezhaoxiang.work/2020/doform01/"/>
    <id>https://hezhaoxiang.work/2020/doform01/</id>
    <published>2020-06-30T14:36:00.000Z</published>
    <updated>2020-09-07T19:03:28.497Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="策略看板总结"><a href="#策略看板总结" class="headerlink" title="策略看板总结"></a>策略看板总结</h1><p><a name="NnaXo"></a></p><h1 id="（一）基础"><a href="#（一）基础" class="headerlink" title="（一）基础"></a>（一）基础</h1><ol><li>js的native和prevent</li></ol><ul><li>.native: 原生js的绑定系统事件，vue中绑定按键事件 @keyup.enter.native<br /></li><li>.prevent: @submit.native.prevent 阻止默认提交</li></ul><ol start="3"><li><p>空对象补足，补充key：null，先拿到allkeys，key数组，在空对象中添加key和value</p></li><li><p>数据格式转换，infoMap</p><p> 对象数组中，相同key的值进行合并。</p></li><li><p>async await</p><p>异步执行，先执行async中的部分，await部分异步（请求到结果再返回）</p></li><li><p>请求方法request </p></li><li><p>样式布局 display：block，按组件划分，高度别写死，多使用margin-top，margin-bottom</p></li><li><p>json处理</p></li></ol><ul><li>JSON.stringify(myJson); json转为对象格式；</li><li>JSON.parse(myObj); 对象转为json格式；</li></ul><ol start="9"><li><br /><a name="kkYHJ"></a># （二）vue知识</li><li><p><strong>vuex使用</strong></p></li></ol><ul><li>store：在main.js中引用store.js，加入到根vue中;<br /></li><li>state成员函数（变量）定义；<br /></li><li>mutation相当于method，使用处 this.$store.commit(‘函数名’，’变量‘)进行保存；<br /></li><li>action：处理异步，可以封装commit<br />method1Action 。。。 commit(); 优点是mutation是同步操作，不能进行其中的变量追踪，action默认为一个primise，执行异步；<br /></li><li>module：多个store划分管理；<br /></li></ul><ol start="2"><li><strong>watch钩子使用–三种</strong></li></ol><ul><li>变量名：直接加方法名  city： ’fun1‘；city变化时才执行fun1;<br /></li><li>immediate： true 立即执行handler方法<br /></li><li>deep: true 监听对象的变化<br /></li></ul><ol start="3"><li><strong>nextick原理和使用</strong></li></ol><ul><li><p>this.$nextick(()=&gt; {}) （异步）</p></li><li><p>vue.nextick 是获取到Dom对象进行操作，一般用于从后台获取数据后，进行DOM更新（如项目中用于更新echart渲染的图表）</p></li><li><p>this.nextick则绑定到了当前环境下的DOM实例</p></li><li><p>使用：在mounted或method中执行，更新DOM，若用于created，在DOM渲染完之后，才能获取DOM值<br><a name="frDby"></a></p><h1 id="（三）element组件"><a href="#（三）element组件" class="headerlink" title="（三）element组件"></a>（三）element组件</h1><p><a name="c0pAf"></a></p><h3 id="1、el-input"><a href="#1、el-input" class="headerlink" title="1、el-input"></a>1、el-input</h3></li><li><p>:maxlength=”2” 限制输入的最大长度为2（两个数字）注意：el-input-number 对maxlength属性无效(该组件有max,min) </p></li><li><p>或者用原生js方法 <input type="text" maxlength="2"></input>  </p></li><li><inoput type="text" oninput="if(value.length > 2) value.slice(0,2) " /></li><li><p>校验：@blur=“method1” 输入框失去焦点时执行method1 ，报错：this.$message.error(‘数据格式错误’)；（el组件）<br><a name="gxXTv"></a></p><h3 id="2、el-button"><a href="#2、el-button" class="headerlink" title="2、el-button"></a>2、el-button</h3></li><li><p>plain：空心形式, size=”mini”</p></li><li><p>type=”primary”</p></li><li><p>@click=”method2” 绑定事件<br><a name="eb32O"></a></p><h3 id="3、el-select-el-option"><a href="#3、el-select-el-option" class="headerlink" title="3、el-select el-option"></a>3、el-select el-option</h3><p>el-select</p></li><li><p>v-model=”selected”  绑定选中的值</p></li><li><p>filterable  支持输入搜索</p></li><li><p>:plaecholder=”请选择”</p></li><li><p>@change=”chooseMethod”  事件绑定在el-select上</p></li></ul><p>el-option</p><ul><li><p>&lt; v-for=”item in options”  :key=”item.value” :label=”item.label” :value=”item.value” &gt;</p></li><li><p>{label:’选项一’， value: ‘1’ } label是显示的选项，key以value来确定每一个唯一<br><a name="zJvKC"></a></p><h3 id="4、el-date-picker"><a href="#4、el-date-picker" class="headerlink" title="4、el-date-picker"></a>4、el-date-picker</h3></li><li><p>type=”date”,datetime, daterange  时间选择分别为“某天，某天具体到分，日期范围”</p></li><li><p>v-model=”toDate” toDate是日期数组，使用时须转为20200701格式</p></li><li><p>range-separator=”-“   start-placeholder=”开始日期”  end-placeholder=”结束日期”&gt;<br><a name="rwxgh"></a></p><h3 id="5、el-radio"><a href="#5、el-radio" class="headerlink" title="5、el-radio"></a>5、el-radio</h3></li><li><p><el-radio v-model="oneRadio" v-for="item in radiosList" :key="item.value" :label="item.value"></el-radio>   注：radiosList是一个对象数组，oneRadio是一个数字或字符，绑定的是 :label 的内容</p></li><li><p>按钮形式：<el-radio-group v-model="chooseType"></p></li></ul><p><el-radio-button :label="choose1">选项一</el-radio-button><br /><el-radio-btton :label="choose2">x</el-radio-button><br /></el-radio-group><br><a name="R6t2S"></a></p><h3 id="6、el-form"><a href="#6、el-form" class="headerlink" title="6、el-form"></a>6、el-form</h3><ul><li><strong>el-form表单绑定form所有的数据，可放置多个控件 input，select等,</strong></li><li><el-form v-model="formdata"> </li></ul><p><e-form-item ><el-input v-model="formdata.name"></el-form-item><br /></el-form><br><a name="oaVo7"></a></p><h3 id="7、el-card"><a href="#7、el-card" class="headerlink" title="7、el-card"></a>7、el-card</h3><ul><li><p>卡片式展示,可实现阴影效果；</p></li><li><p><el-card body-style="{padding: '4px, 5px'; width: '100px'}" shadow="hover"></el-card><br><a name="yeRaw"></a></p><h3 id="8、el-upload"><a href="#8、el-upload" class="headerlink" title="8、el-upload"></a>8、el-upload</h3></li><li><p>action=”<a href="https://jsonplaceholder.typicode.com/posts/&quot;" target="_blank" rel="noopener">https://jsonplaceholder.typicode.com/posts/&quot;</a> 上传位置，post方式</p></li><li><p>:limit=”3”  数量限制</p></li><li><p>on-success=”m1”</p></li><li><p>on-remove=”m2”</p></li><li><p>on-preview=”m3” 图片放大预览</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1599503267454-095e906f-31a6-40a4-b105-db01231b2466.png#align=left&display=inline&height=116&margin=%5Bobject%20Object%5D&name=image.png&originHeight=232&originWidth=954&size=30972&status=done&style=none&width=477" alt="image.png"><br />，m3里 得到imgUrl</p><ul><li><p>list-type=”picture-card/picture”展示类型：卡片或直接图片<br><a name="jHjQd"></a></p><h3 id="9、el-table"><a href="#9、el-table" class="headerlink" title="9、el-table"></a>9、el-table</h3></li><li><p>用法与原理：</p></li></ul><p>table按行展示数据，多行展示可以在tableData中n个对象–&gt;n行<br />或: 数组v-for形式，每个el-table-column的prop与tableData中对应，如0303，0304<br /><el-table :data="params" ><br />&lt;el-table-column <br />v-for=”(item index) in tableHead”<br />:prop=”item”<br />:label=”item”  //表头展示内容<br />:key=”index” &gt;<br /><template><br /><br><br /></template><br /></el-table-column><br /></el-table><br />tableData格式：【{0303: []; 0304: []; },{0303: []; 0304: [];}】是一个对象数组，<br><a name="dS01R"></a></p><h1 id="（四）echarts组件"><a href="#（四）echarts组件" class="headerlink" title="（四）echarts组件"></a>（四）echarts组件</h1><ol><li>主要用法：设置chartX和series</li></ol><ul><li>chartX值：从接口数据中读取，chartX = Object.keys(result);</li><li>series = [{name,data,type}] 数组，处理后的result push进数组；其中name为图例，data数组，type为line或bar；</li></ul><ol start="2"><li>读取接口数据，设置chartX，添加series–&gt;chartInit</li></ol><ul><li>request中包含的请求参数，通过 async fun1 –&gt; try{ await result=this.$service.接口名（request）}–&gt;catch(err){} –&gt;finally{}</li></ul><ol start="3"><li>图表渲染</li></ol><ul><li>setTooltip（提示词中的formatter，修改提示顺序，样式等），</li><li>setLegendOption，title，</li><li>setyAxis（formatter中 小数-&gt;百分比）</li></ul><ol start="4"><li>tooltip提示词修改，排序</li><li>图例顺序修改</li><li>个人思考：大数据量情况下，echarts会不会慢？如何优化？</li></ol><p>查阅资料，使用echarts中的datazoom方式。</p><ol start="7"><li><p>如果不使用monitorChart，自己是否可以渲染图表？</p><p>  原本echarts组件所有设置均在option中，monitorChart对echarts的封装，完成配置项即可。<br><a name="7JBuM"></a></p><h1 id="（五）体会-amp-思考"><a href="#（五）体会-amp-思考" class="headerlink" title="（五）体会&amp;思考"></a>（五）体会&amp;思考</h1><p><a name="DImiL"></a></p><h3 id="1、组件化封装和使用"><a href="#1、组件化封装和使用" class="headerlink" title="1、组件化封装和使用"></a>1、组件化封装和使用</h3></li></ol><ul><li><p>单独功能划分为组件，保证组件内功能单一，不会影响其他功能；</p></li><li><p>封装现有组件进行使用，修改配置项，如monitorCharts组件，对title，chartX，legend，tooltip,type等方面都涉及到；使用时查看组件如何封装、之前如何使用，或”echarts官网–&gt;配置项”都能找到相关设置；<br><a name="a34Uu"></a></p><h3 id="2、通过接口获取数据，进行处理"><a href="#2、通过接口获取数据，进行处理" class="headerlink" title="2、通过接口获取数据，进行处理"></a>2、通过接口获取数据，进行处理</h3></li><li><p>对接口的封装，理解接口封装的原理，使用request进行请求数据。</p></li><li><p>后端数据如何处理，转换成自己所需要的格式，进行合理变换，再进行渲染，这一步很重要。</p></li><li><br /></li><li><p>个人思考：大数据量情况下，echarts会不会慢？如何优化？</p></li><li><p>如果不使用monitorChart，自己是否可以渲染图表<br><a name="0Gqtl"></a></p><h3 id="3、项目整体构思，实现思路"><a href="#3、项目整体构思，实现思路" class="headerlink" title="3、项目整体构思，实现思路"></a>3、项目整体构思，实现思路</h3><p><a name="ytQG3"></a></p><h4 id="（1）流程图"><a href="#（1）流程图" class="headerlink" title="（1）流程图"></a>（1）流程图</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1599503304407-8811c2c4-9956-4ee9-a082-43d019722fac.png#align=left&display=inline&height=401&margin=%5Bobject%20Object%5D&name=image.png&originHeight=801&originWidth=869&size=73134&status=done&style=none&width=434.5" alt="image.png"><br><a name="Bcr8P"></a></p><h4 id="（2）策略看板–图表相关实现"><a href="#（2）策略看板–图表相关实现" class="headerlink" title="（2）策略看板–图表相关实现"></a>（2）策略看板–图表相关实现</h4><p>实现思路：<br /><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1599503337077-e4492628-b02d-4f93-b4c7-74afbee1260b.png#align=left&display=inline&height=296&margin=%5Bobject%20Object%5D&name=image.png&originHeight=591&originWidth=1257&size=95376&status=done&style=none&width=628.5" alt="image.png"><br /></p></li></ul><p><a name="fqcY7"></a></p><h4 id="（3）所遇难点及解决"><a href="#（3）所遇难点及解决" class="headerlink" title="（3）所遇难点及解决"></a>（3）所遇难点及解决</h4><table><thead><tr><th align="left">难点</th><th align="left">原因及解决</th></tr></thead><tbody><tr><td align="left">1、小数–&gt;百分比保留两位小数<br />问题：Math.floor(num * 10000) /100 不起效果</td><td align="left">已解决：(num *100).toFixed(2) ;</td></tr><tr><td align="left">2、图例显示顺序<br />要求固定图例顺序及相应颜色</td><td align="left">已解决： 在series中给初始值<br />缺点：通用性不好，不易扩展</td></tr><tr><td align="left">3、城市监听问题，二级监听中一直晚一步</td><td align="left">原因：点击查询后才将城市日期发到vuex中，监听时会造成两次请求接口的参数不一样，导致一直晚一步。<br />解决：在第一个折线图中，初始化时dispatch，让vuex中有日期和城市，table中每次变化，第一个折线图就发到vuex</td></tr></tbody></table><br /><a name="Uewoq"></a>#### （4）后续思考<ul><li><p>执行效率</p><p>   从接口请求数据，转为echarts所需的series格式，然后将series和chartX渲染。在柱状图中，请求数据范围一般在7天到30天，渲染时间5秒以内。<br />     若大数据量，如上百天的情况，使用datazoom为宜，datazoom是echarts自带缩放属性，可拖动x轴坐标的范围，只显示用户选择的数据，方法较好。</p></li><li><p>如何优化</p><pre><code>一是echart渲染问题，使用datazoom；&lt;br /&gt;     二是代码复用方面，三个chart中部分代码是相似的，如chartInit，请求接口等，可进行设定方法参数进行抽取； 缺点是后期扩展不便，可能需要对数据进行其他处理，或增加功能。&lt;br /&gt;</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;策略看板总结&quot;&gt;&lt;a href=&quot;#策略看板总结&quot; class=&quot;headerlink&quot; title=&quot;策略看板总结&quot;&gt;&lt;/a&gt;策略看板总结&lt;/h1&gt;&lt;p&gt;&lt;a name=&quot;NnaXo&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;（一）基础&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="美团实习" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="工作总结" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="实习" scheme="https://hezhaoxiang.work/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>美团实习总结零--git操作和流程</title>
    <link href="https://hezhaoxiang.work/2020/about-git/"/>
    <id>https://hezhaoxiang.work/2020/about-git/</id>
    <published>2020-06-10T13:41:00.000Z</published>
    <updated>2020-09-07T18:38:14.713Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p><a name="arM7X"></a></p><h1 id="Git相关"><a href="#Git相关" class="headerlink" title="Git相关"></a>Git相关</h1><p>git init 新建一个空的仓库<br />git status 查看状态<br />git add . 添加文件<br />git commit -m ‘注释’ 提交添加的文件并备注说明<br />git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:jinzhaogit/git.git 连接远程仓库<br />git push -u origin master 将本地仓库文件推送到远程仓库<br><a name="e437e2f3"></a></p><h2 id="1、推到自己的远程分支"><a href="#1、推到自己的远程分支" class="headerlink" title="1、推到自己的远程分支"></a>1、推到自己的远程分支</h2><p>git add .<br />git commit -m “注释说明”<br />git push //默认全部<br />git pull  //如果失败，先pull再push，vs中解决冲突<br><a name="de41519e"></a></p><h2 id="2、分支管理"><a href="#2、分支管理" class="headerlink" title="2、分支管理"></a>2、分支管理</h2><ul><li>git checkout -b fileName ，创建并切换到fileName分支，等价于git branch fName–&gt;（切换）git checkout fName<br /></li><li>git branch： 查看分支<br /></li><li>git switch fName/master ===git checkout fName 都是切换分支<br /></li><li>git merge fName： 合并分支到master<br /></li><li>git branch -d fName： 删除分支<br /></li><li>git push origin feature/hzxx 推送到远仓库的分支上<br /><br><a name="59dff9e7"></a><h3 id="创建新分支并拉代码"><a href="#创建新分支并拉代码" class="headerlink" title="创建新分支并拉代码"></a>创建新分支并拉代码</h3>git checkout -b feature/cityDecision-hzx origin/feature<br />git pull<br />git merge feature/hzx<br />git commit -m “merge”<br />git push origin feature/hzx:feature/hzx     创建后，推到自己远程分支<br />git branch –set-upstream-to=origin/feature/cityDecision-hzx   feature/cityDecision-hzx 代码合并到远程自己的分支<br><a name="cc59dd27"></a><h2 id="3、thrift发布"><a href="#3、thrift发布" class="headerlink" title="3、thrift发布"></a>3、thrift发布</h2><table><thead><tr><th>（1）thrift网址-&gt;owl API -&gt; snapshots / 1.x-SNAPSHOT-&gt;<a href="https://thrift-qcs.sankuai.com/devtool" target="_blank" rel="noopener">https://thrift-qcs.sankuai.com/devtool</a><br />（2）首次：安装rimraf（作用：删除编译好的文件）-&gt;删除编译好的资源-&gt; package.json修改mtfe-&gt; 重新运行<br />      后续使用：修改SNAPSHOT版本–&gt;yarn</th></tr></thead></table></li></ul><p>（3）相关命令<br /><del>npm install rimraf -g</del><br /><del>rimraf node_modules</del><br /><del>修改package.json  “@mtfe/thrift-api-qcs-data-owl” : 1.0.9-SNAPSHOT</del><br /><del>yarn</del><br />yarn add xxx@new_version<br />yarn add [package]@[version] // 安装指定版本，添加到package.json，如果需要精确到小版本，使用-E参数;<br />yarn add rimraf<br />npm run dev<br />npm run node-dev<br><a name="782da30d"></a></p><h2 id="4、发布到dev"><a href="#4、发布到dev" class="headerlink" title="4、发布到dev"></a>4、发布到dev</h2><ol><li>先发布到feature/hzx 上<br /></li><li>切换到dev分支git checkout -b dev origin/dev<br /></li><li>查看分支 git branch<br /></li><li>git pull 拉取<br /></li><li>git merge feature/hzx 把hzx合并到dev上，如果有冲突，上半部分HEAD是dev，下半部分是feature/hzx, 解决冲突，二者留一或修改其中一部分<br /></li><li>git commit -m ‘merge’<br /></li><li>git push origin dev<br /></li><li>在cargo上构建dev，启动镜像<br /></li></ol><p>另外：pull request到master<br />强制提交：git comit -m “发到master” –add-notify<br><a name="d71effba"></a></p><h2 id="5、发布到st"><a href="#5、发布到st" class="headerlink" title="5、发布到st"></a>5、发布到st</h2><p>方法一：</p><ul><li>推到自己的远程分支 git add . git commit -m “ziji” git push origin feature/hzxx<br /></li><li>界面操作 pull request:  feature/hzxx –&gt; release <br /></li><li>同意后在plus部署stage<br /></li></ul><p>方法二：<br />git checkout -b release origin/release （git checkout release）切换到release分支，自己merge<br />git pull<br />git merge feature/hzx<br />git commit -m “merge”  如果报错，先解决冲突，再git commit -m ‘merge’ –no-verify<br />git push<br><a name="e3f46e23"></a></p><h2 id="6、发布上线master"><a href="#6、发布上线master" class="headerlink" title="6、发布上线master"></a>6、发布上线master</h2><ul><li><p>推到远程自己的分支 git add . git commit -m “备注” git pull origin master<br /></p></li><li><p>解决冲突，主要是yarn.lock,  git push origin feature/hzxx<br /></p></li><li><p>界面pull request<br /><br><a name="47615855"></a></p><h2 id="7、git版本回滚"><a href="#7、git版本回滚" class="headerlink" title="7、git版本回滚"></a>7、git版本回滚</h2></li><li><p>git refolg 查看版本<br /></p></li><li><p>git reset –hard abjdkfbaf版本号（或 git reset –hard HEAD@ {3} 数字为序号）<br /></p></li><li><p>git push -f origin feature/hzxx 版本覆盖<br /></p></li><li><p>git pull origin feature/hzxx 本地回到之前的版本<br /><br><a name="5e72862b"></a></p><h1 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h1></li></ul><ol><li>接到需求，进行前端开发。<br />2. 配置功能菜单<br />2. 更新接口snapshot，<br />新版本的接口，在 Thrift 上编译新版本。<br />然后将版本号替换到package.json里面去。<br />3. 前后端联调。<br />4. Merge代码到Dev分支（如上，4、发布到dev）<br />5. 在 Cargo 上构建并部署Dev环境<a href="http://cargo.sankuai.com/stack/detail?stack_uuid=5a82826d-10cb-466e-b010-c0a49c39b5e4" target="_blank" rel="noopener">http://cargo.sankuai.com/stack/detail?stack_uuid=5a82826d-10cb-466e-b010-c0a49c39b5e4</a><br />6. 访问 开发环境 并验证  <a href="https://plus.mws.sankuai.com/#/release/job/list?releaseId=25017" target="_blank" rel="noopener">https://plus.mws.sankuai.com/#/release/job/list?releaseId=25017</a><br />7. 如果通过，Merge代码到Release分支。 git merge feature/hzxx界面操作<br />8. 在 Plus 上构建并部署Stage环境  plus-&gt;”部署任务“ -&gt;”staging”<br />9. 访问 Stage环境 进行验证或者回归测试。<br />10. 如果没有问题，Merge代码到Master分支。<br />11. 在 Plus 上构建并部署Production环境 –&gt;发到master之后stash自动构建，等它构建完，自己点部署即可。<br />代码提交流程：<br />Dev(dev) - Staging (release) - Production (master)<br />在Plus上部署staging时，先进行构建，在进行部署。<br /><br><br />代码提交流程：<br />Dev(dev) - Staging (release) - Production (master)<br />在Plus上部署staging时，先进行构建，在进行部署。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h1&gt;&lt;p&gt;&lt;a name=&quot;arM7X&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Git相关&quot;&gt;&lt;a href=&quot;#Git相关&quot; 
      
    
    </summary>
    
      <category term="美团实习" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="工作总结" scheme="https://hezhaoxiang.work/categories/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="实习" scheme="https://hezhaoxiang.work/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>web前端--ES6补充</title>
    <link href="https://hezhaoxiang.work/2020/learnes6-02/"/>
    <id>https://hezhaoxiang.work/2020/learnes6-02/</id>
    <published>2020-05-11T12:31:00.000Z</published>
    <updated>2020-09-07T17:55:32.694Z</updated>
    
    <content type="html"><![CDATA[<hr><p>1、let 与const：暂时性死区<br>• 指向内存地址而不是变量，基本数据类型变量在内存地址中的位置不变，故不变；<br>• 引用数据类型（如对象，数组），可变化；<br>2、声明变量的6种方法<br>• let，const，<br>• var function<br>• import，class<br>3、模板字符串<br>• 模板字符串中嵌入变量，需要将变量名写在${}之中  this is ${user.name}.<br>• 可以使用字符串，若变量不存在则报错<br>4、函数扩展<br>• 参数可以有默认值<br>5、ES6遍历对象得到key的5种方法<br>• for  … in<br>• Object.keys(obj)   返回数组<br>• Object.getOwnPropertyNames(obj) 返回数组，前三个都不包含symbol属性<br>• Object. getOwnPropertySymbols（obj）返回数组，包含symbol属性的key<br>6、Symbol第七种数据类型<br>• 用途：用于object对象的属性，保证属性唯一；<br>• 属性名遍历：Symbol变量作为属性，不是私有，但是for in ,Object.keys()等方式不能拿到Symbol的属性名，只能通过Object.getOwnPropertySymbols获取属性名；<br>• 第七种数据类型，相同参数的symbol值不相同 symbol（abc）===symbol(abc)  //false<br>• toString()可以转为字符串；let sym = Symbol(); sym.toStriing(); //“Symbol()”<br>• symbol值不相同，可以作为对象的属性来区分同名对象；如<br>• let obj={};<br>obj[sym1]=’hello’; //相当于key：value，即sym1：‘hello’<br>let obj2={<br>    [sym2]:’world’<br>}<br>7、WeakSet<br>• 与set作用相同，只是weakset只能用于对象（obj或数组）去重；<br>• weakset是弱引用，不能进行遍历，可以通过创建weakset，让Foo实例方法只能在实例中使用,foos对实例的引用，不会被计入内存回收机制<br>8、promise<br>• promise（）.then().catch<br>• 第一个参数是resolve，回调成功进入第一个then；<br>• rejected：失败进入catch或第二个then；<br>9、async await<br>• async表明函数中有异步操作，async返回一个prmise，<br>• 根据promise的resolve或reject执行await，reject报错则则进入catch，resolve成功则接着执行await后面；<br>• await放入try-catch，捕捉错误<br>  async function asyncPrint(ms) {<br>    try {<br>       console.log(‘start’);<br>       await timeout(ms);  //这里返回了错误<br>       console.log(‘end’);  //所以这句代码不会被执行了<br>    } catch(err) {<br>       console.log(err); //这里捕捉到错误error<br>    }<br>  }<br>  asyncPrint(1000);<br>10、class<br>• 类定义属性和方法class,constructor,method1方法<br>• get,set方法待查<br>11、数组各种方法<br>12、字符串方法<br>• includes 返回true/false  数组和字符串都支持<br>• startsWith 和endsWith： 返回是否以某字符（或某几个）开头或结尾，true/false。 str1.startsWith（‘hello’）<br>• startsWith 和endsWith（第二个参数）：str1.startsWith（‘hello’， 0）0参数是开始位置<br>• repeat ：str.repeat（3）str重复3遍<br>• 前后补全：padStart(5，ab)–用ab把字符串补全到5个字符；padEnd()<br>• 前后去除空格：trimStart()，trimEnd()   const newStr = str.trim();去除前后，返回新字符串；<br>13、数值方法Number<br>•  Number.isInteger（true/25/‘25’） false/true/false 判断整数，是数值才为true<br>• Number.parseInt() Number.parseFloat()判断<br>• let y = 0;  y = y || 100（y为空时，赋值100）;   y值为100；<br>14、BigInt第八种数据类型<br>• 大整数无位数限制，末尾加n，12n，  typeof 12n（bigint）<br>• 大整数和整数不相等：1n==1– false<br>• 通过Number可转换大整数为整数，数值过大则显示不准；<br>• BigInt构造函数思路：先转为Number，再转为BigInt； BigInt(1)  BigInt(‘1’) 都可以， BigInt(‘1n’)报错（字符串’1n’不能转为数字）；<br>15、函数扩展语法<br>（1）参数默认值<br> function(x, y = 1)   [undefined, 1]<br>（2）参数解构赋值<br>•  function({x, y = 1}) 传入参数为对象，进行解构赋值<br>• function({x, y = 1} = {} ) 未传入参数，默认为空对象，使用【undefined，1】<br>• （function({x, y = 1} = {} )）.length = 1 length值为没有默认值的参数个数；<br>• （function(…args)).length = 0;<br>（3）name属性<br>• const fun1 = function add(){}   fun1.name // add<br>• function add(){}   add.name // add<br>（4）箭头函数<br>• 省略写法：var sum = (num1,num2) =&gt; num1+ num2;  只有一行语句时省略{}和return；<br>• var sum  = function(num1, num2) { return num1 + num2};<br>• rest剩余参数：const Number = (…num) =&gt; num;    Number(1,2,3)  //[1,2,3]<br>• this指向：一直指向定义时的this，即在参数中使用的this；箭头函数创建一个新的内存，指向新内存，即指向定义；<br>• function foo(){ setTimeout(()=&gt;)}<br>• 柯里化currying：将多参数变为单参数形式；<br>• catch在ES2019中：try{} catch(err){}  或catch{}都可以；<br>16、 数组方法<br>find、findIndex<br>• find返回符合条件的第一个值，arr.find(i =&gt; i &lt;0); 不存在符合条件的-&gt; undefined<br>• findIndex返回第一个index，没有则-1；<br>• includes方法返回true/false,相比indexOf（返回第一个位置或-1）优势：语义明显，不用和-1 比较<br>（1）改变原数组<br>• pop()：删除数组最后一个元素，并返回该元素<br>• push()：在数组尾部添加元素，并返回更新后的数组长度<br>• shift()：删除数组的第一个元素，并返回该元素<br>• unshift()：在数组第一位添加元素，并返回更新后的数组长度<br>• sort()：对数组排序（按字符ASCII进行排序），也可添加回调函数按照想要的规则排序<br>• reverse()：数组反转<br>• splice(index, 个数, 新数据)：返回被删除元素所组成的数组。<br>（2）不改变原数组<br>map，reduce，foreach，indexof  findindex，some，every，concat<br>• map返回一个新数组<br>• reduce<br>let res = args.reduce((sum,i)=&gt;{<br>    return sum += i;<br>},0);<br>//或者<br>结果：<br>四个参数：<br>累计值：必需<br>当前值：必需<br>当前索引：可选<br>当前值所在数组：可选<br> 作用：<br>1、数组求和：return args.reduce((a,b)=&gt; a+b);<br>2、扁平化flat：arr.reduce((res,i)=&gt; res.concat(i), []);<br>• concat：返回新数组<br>let newArr = [].concat(1,[2,3],[4]);// 是否有扩展符…不影响<br>• 其他<br>17、对象<br>（1）对象简写<br>let num =’1’;<br>let obj1 = {num};  //定义对象，属性名就是num，值是1<br>等价于: let obj1 = {<br>  num:num,<br>    method(){…},}<br>（2）5种方法对象遍历 Object.getOwnPropertyNames（obj1）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;1、let 与const：暂时性死区&lt;br&gt;• 指向内存地址而不是变量，基本数据类型变量在内存地址中的位置不变，故不变；&lt;br&gt;• 引用数据类型（如对象，数组），可变化；&lt;br&gt;2、声明变量的6种方法&lt;br&gt;• let，const，&lt;br&gt;• var functi
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="ES6" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/ES6/"/>
    
    
      <category term="ES6" scheme="https://hezhaoxiang.work/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>不能不知道的HTTP</title>
    <link href="https://hezhaoxiang.work/2020/http/"/>
    <id>https://hezhaoxiang.work/2020/http/</id>
    <published>2020-03-18T12:36:00.000Z</published>
    <updated>2020-04-01T18:11:05.920Z</updated>
    
    <content type="html"><![CDATA[<p><a name="zepR4"></a></p><h1 id="一、入门部分"><a href="#一、入门部分" class="headerlink" title="一、入门部分"></a>一、入门部分</h1><p><a name="7jJWa"></a></p><h4 id="1、cache-control缓存设置"><a href="#1、cache-control缓存设置" class="headerlink" title="1、cache-control缓存设置"></a>1、cache-control缓存设置</h4><ul><li><p>max-age=100：静态资源缓存100秒</p></li><li><p>public/private:只能在客户端/代理服务器  缓存</p></li><li><p>must-revalidate：缓存过期后，到服务端验证才能继续使用缓存</p></li><li><p>no-cache/no-store:是否使用缓存<br><a name="0427n"></a></p><h4 id="2、缓存验证（缓存与服务器内容是否相同）"><a href="#2、缓存验证（缓存与服务器内容是否相同）" class="headerlink" title="2、缓存验证（缓存与服务器内容是否相同）"></a>2、缓存验证（缓存与服务器内容是否相同）</h4></li><li><p>last-modified配合if-modified-since</p></li><li><p>etag配合 if-none-match</p></li></ul><p>3、头部</p><ul><li>content-type conten-encoding：数据类型</li><li>cookie：保持会话信息</li><li>CORS实现跨域并保证安全</li></ul><p>4、TCP部分</p><ul><li>https链接创建过程，为什么https安全</li><li>长链接，为什么需要</li><li>http2的信道复用为什么能提高性能</li></ul><p>5、输入url后http请求返回的完整过程<br /><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584548205948-114979f3-ba13-4077-bce7-d13651a80223.png#align=left&display=inline&height=236&name=image.png&originHeight=576&originWidth=1822&size=351629&status=done&style=none&width=746" alt="image.png"></p><p>redirect跳转–》app cache–》DNS解析域名–》创建TCP连接–》request发送请求–》response接受响应</p><p><a name="EEppw"></a></p><h1 id="二、基础知识"><a href="#二、基础知识" class="headerlink" title="二、基础知识"></a>二、基础知识</h1><p><a name="pvbZQ"></a></p><h4 id="1、五层模型"><a href="#1、五层模型" class="headerlink" title="1、五层模型"></a>1、五层模型</h4><ul><li><p>应用层（http，ftp）–传输层（TCP，UDP）–网络层–数据链路层–物理层<br><a name="U4uuZ"></a></p><h4 id="2、http1-1（增加一些host命令）-http2"><a href="#2、http1-1（增加一些host命令）-http2" class="headerlink" title="2、http1.1（增加一些host命令） http2"></a>2、http1.1（增加一些host命令） http2</h4></li><li><p>数据以二进制传输，头信息压缩和推送（服务器主动推送html，js等到客户端）提高效率。<br><a name="ABpby"></a></p><h4 id="3、http三次握手"><a href="#3、http三次握手" class="headerlink" title="3、http三次握手"></a>3、http三次握手</h4><p>（1）客户端C–&gt;服务端S：发送标志位SYN=1，序列号seq=x<br />（2）S–&gt;C:                     SYN =1, seq=y  确认号ack=x+1<br />（3）C–&gt;S:                     seq=z  ack=y+1<br><a name="bCX5u"></a></p><h4 id="4、URI，-URL，URN"><a href="#4、URI，-URL，URN" class="headerlink" title="4、URI， URL，URN"></a>4、URI， URL，URN</h4></li><li><p>URI =URL+URN 统一资源标志符： 标识互联网上的唯一资源；</p></li><li><p>URL 统一资源定位器:访问链接    基本形式：协议+主机+端口号+路径path参数</p></li><li><p>URN永久统一资源定位符，移动后仍能访问<br><a name="mpLGW"></a></p><h4 id="5、http报文"><a href="#5、http报文" class="headerlink" title="5、http报文"></a>5、http报文</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584556378357-bf1b77b0-1dd9-4d25-8192-6d3de7cf2121.png#align=left&display=inline&height=232&name=image.png&originHeight=464&originWidth=1541&size=273687&status=done&style=none&width=770.5" alt="image.png"></p></li><li><p>起始行： 请求方法+URL+协议版本                                 协议版本+状态码</p></li><li><p>header首部<br><a name="Sq9QZ"></a></p><h4 id="6、http方法"><a href="#6、http方法" class="headerlink" title="6、http方法"></a>6、http方法</h4><p>get post delete<br><a name="fZLzz"></a></p><h4 id="7、CORS跨域"><a href="#7、CORS跨域" class="headerlink" title="7、CORS跨域"></a>7、CORS跨域</h4></li><li><p>两种解决跨域请求办法</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584586489701-cc937423-f886-460a-ab3d-277cff14e262.png#align=left&display=inline&height=182&name=image.png&originHeight=363&originWidth=918&size=40317&status=done&style=none&width=459" alt="image.png"><br><a name="jE05P"></a></p><h4 id="8、CORE预请求"><a href="#8、CORE预请求" class="headerlink" title="8、CORE预请求"></a>8、CORE预请求</h4><ul><li><p>默认允许的method请求方法：GET POST HEAD( delete等不行)</p></li><li><p>默认允许的content-type ：text/plain、  multipart/form-data 、application/x-www-form-urlencoded</p></li><li><p>预请求：’Access-Control-Allow-Methods’:’PUT.POST,DELETE’ //使得预请求允许</p></li><li><p>通过请求方法options，让服务器允许后续的post请求<br><a name="TTANL"></a></p><h3 id="9、缓存头cache-control-header中"><a href="#9、缓存头cache-control-header中" class="headerlink" title="9、缓存头cache-control (header中)"></a>9、缓存头cache-control (header中)</h3><p><a name="HYX1S"></a></p><h4 id="1-可缓存性"><a href="#1-可缓存性" class="headerlink" title="(1)可缓存性"></a>(1)可缓存性</h4></li><li><p>public : 经过的地方（客户端和代理服务器）都可进行缓存</p></li><li><p>private：只有发起请求的浏览器可以进行缓存</p></li><li><p>no-cache：不允许缓存（本地可以有缓存，下次使用缓存需要服务器先验证）</p></li><li><p>区别 于no-store：完全不允许缓存<br><a name="f7x6e"></a></p><h4 id="（2）到期"><a href="#（2）到期" class="headerlink" title="（2）到期"></a>（2）到期</h4></li><li><p>浏览器中：max-age=&lt;&gt;多少秒</p></li><li><p>代理服务器中： s-maxage</p></li><li><p>服务器中：max-stale，即使浏览器中过期，max-stale不过期也能继续使用<br><a name="wbXZH"></a></p><h4 id="（3）重新验证"><a href="#（3）重新验证" class="headerlink" title="（3）重新验证"></a>（3）重新验证</h4></li><li><p>must-revalidate：过期后必须重新到服务器端进行请求</p></li><li><p>proxy-revalidate：缓存服务器过期去原服务器请求<br><a name="iB1T9"></a></p><h3 id="10、资源验证-header中"><a href="#10、资源验证-header中" class="headerlink" title="10、资源验证 (header中)"></a>10、资源验证 (header中)</h3><p><a name="pqK3U"></a></p><h4 id="两种验证头"><a href="#两种验证头" class="headerlink" title="两种验证头"></a>两种验证头</h4></li><li><p>last-modified：上次修改时间 配合if-modified-since或者if-unmodified-since验证是否修改</p></li><li><p>etag 数据签名（如进行hash）配合if-match或if-none-match判断签名是否变化<br><a name="457Dm"></a></p><h4 id="11、Cookie-header中"><a href="#11、Cookie-header中" class="headerlink" title="11、Cookie  (header中)"></a>11、Cookie  (header中)</h4></li><li><p>通过set-cookie设置，下次请求时后自动带上</p></li><li><p><strong>cookie形式：键值对key=value  id=1223，可有多个 set-cookie：[‘id-1’,’ad=2’]</strong></p></li></ul><p><strong>cookie属性</strong></p><ul><li><p>max-age和expires设置过期时间</p></li><li><p>secure只在https中使用</p></li><li><p>httpOnly不能通过document.cookie访问<br><a name="OvV71"></a></p><h3 id="12、session"><a href="#12、session" class="headerlink" title="12、session"></a>12、session</h3></li><li><p>作为会话连接，通常使用cookie的key作为session，二者不相等，</p></li><li><p>释放链接后消失，而cookie通常存在缓存中<br><a name="atn9Y"></a></p><h4 id="13、http长链接"><a href="#13、http长链接" class="headerlink" title="13、http长链接"></a>13、http长链接</h4></li><li><p>connection：Keep-Alive 继续保持，可以复用</p></li><li><p>一个TCP链接可以有多个http链接<br><a name="xqfsP"></a></p><h3 id="14、数据协商"><a href="#14、数据协商" class="headerlink" title="14、数据协商"></a>14、数据协商</h3><p>客户端和服务端协商数据<br><a name="QQz57"></a></p><h4 id="（1）请求Accept"><a href="#（1）请求Accept" class="headerlink" title="（1）请求Accept"></a>（1）请求Accept</h4></li><li><p>accept指定想要的数据类型</p></li><li><p>accept-encoding压缩方式：gzip ，deflate ，br（较新，压缩比高）</p></li><li><p>accept-language :’zh-CN’ ‘en’</p></li><li><p>user-Agent:  包括win10系统,浏览器内核，浏览器版本等信息<br><a name="J4kMv"></a></p><h4 id="（2）服务端返回Content"><a href="#（2）服务端返回Content" class="headerlink" title="（2）服务端返回Content"></a>（2）服务端返回Content</h4></li><li><p>Content-Type</p></li><li><p>content-encoding</p></li><li><p>content-language</p></li></ul><p><img src="https://hezhaoxiang.coding.net/s/3bb59473-9322-470c-81d7-b2d7648c842e" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584599066280-f9c26d7e-30a8-47a6-88e7-ab0cef3a4b84.png#align=left&display=inline&height=324&name=image.png&originHeight=647&originWidth=792&size=53194&status=done&style=none&width=396" alt="image.png"><br><a name="x8SBs"></a></p><h4 id="15、redirect重定向"><a href="#15、redirect重定向" class="headerlink" title="15、redirect重定向"></a>15、redirect重定向</h4><ul><li><p>资源转移到别的地方 location：‘/new’<br><a name="iKY7q"></a></p><h3 id="16、CSP（Content-Security-Policy）内容安全策略"><a href="#16、CSP（Content-Security-Policy）内容安全策略" class="headerlink" title="16、CSP（Content-Security-Policy）内容安全策略"></a>16、CSP（Content-Security-Policy）内容安全策略</h3><p><a name="79npc"></a></p><h4 id="（1）作用"><a href="#（1）作用" class="headerlink" title="（1）作用"></a>（1）作用</h4></li><li><p>限制资源获取</p></li><li><p>报告资源获取越权<br><a name="om2mL"></a></p><h4 id="（2）限制方式"><a href="#（2）限制方式" class="headerlink" title="（2）限制方式"></a>（2）限制方式</h4></li><li><p>default-src 限制全局/部分 script-src</p></li><li><p>制定资源 范围</p></li><li><p>‘Content-Security-Policy’ : ‘default-src &#39;http&#39;self\ ‘不能通过链接方式获取该资源,不能跳转出去</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a name=&quot;zepR4&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;一、入门部分&quot;&gt;&lt;a href=&quot;#一、入门部分&quot; class=&quot;headerlink&quot; title=&quot;一、入门部分&quot;&gt;&lt;/a&gt;一、入门部分&lt;/h1&gt;&lt;p&gt;&lt;a name=&quot;7jJWa&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="计算机基础" scheme="https://hezhaoxiang.work/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
      <category term="http" scheme="https://hezhaoxiang.work/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/http/"/>
    
    
      <category term="http" scheme="https://hezhaoxiang.work/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>web前端--ES6模块化和webpack</title>
    <link href="https://hezhaoxiang.work/2020/es6-webpack/"/>
    <id>https://hezhaoxiang.work/2020/es6-webpack/</id>
    <published>2020-03-17T15:36:00.000Z</published>
    <updated>2020-04-01T18:10:03.083Z</updated>
    
    <content type="html"><![CDATA[<p>内容同步更新在语雀笔记里~<br><a name="NsGDe"></a></p><h1 id="一、ES6模块化"><a href="#一、ES6模块化" class="headerlink" title="一、ES6模块化"></a>一、ES6模块化</h1><p><a name="gsNbY"></a></p><h4 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h4><ul><li><p>将一个功能封装到一个模块中，模块之间相互隔离，通过接口调用；</p></li><li><p>代码复用，便于管理和后期维护。<br><a name="ErL9S"></a></p><h4 id="浏览器模块化规范"><a href="#浏览器模块化规范" class="headerlink" title="浏览器模块化规范"></a>浏览器模块化规范</h4></li><li><p>AMD：require.js</p></li><li><p>CMD:  Sea.js<br><a name="7n9a3"></a></p><h4 id="服务器端模块化规范"><a href="#服务器端模块化规范" class="headerlink" title="服务器端模块化规范"></a>服务器端模块化规范</h4></li><li><p>CommonJS: 1、模块分为单文件模块和包 2、模块导出 module.export 和exports  3、导入require（’模块标识符’）<br><a name="OTTo0"></a></p><h4 id="ES6模块化（浏览器与服务器通用）定义规范"><a href="#ES6模块化（浏览器与服务器通用）定义规范" class="headerlink" title="ES6模块化（浏览器与服务器通用）定义规范"></a>ES6模块化（浏览器与服务器通用）定义规范</h4></li><li><p>每个js是单独的文件</p></li><li><p>导入模块成员用import，暴露使用export<br><a name="Vt5is"></a></p><h4 id="node-js中使用bable实现ES6模块化"><a href="#node-js中使用bable实现ES6模块化" class="headerlink" title="node.js中使用bable实现ES6模块化"></a>node.js中使用bable实现ES6模块化</h4></li><li><p>bable：语法转换插件 npm install –save-dev <a href="#">@bable</a>/cli，polyfill等 </p></li><li><p>项目中创建bable.config.js文件如下，然后npx bable-node index.js，在index.js中 运行bable插件</p></li></ul><p><img src="https://hezhaoxiang.coding.net/s/eb47ddf2-e99c-4ce8-90ca-0a60f0023cb0" alt="image.png"><br><a name="2TI2m"></a></p><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><ul><li><p>默认*<em>export default { 变量 }  *</em>可以将模块中的私有变量暴露出去</p></li><li><p>按需导出 <strong>export function sum= fumction（）{}</strong><br><a name="gqHcr"></a></p><h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4></li><li><p>import 接收名 from  ‘./sum.js’</p></li><li><p>按需导入 import { s1 } from “./m1.js” s1需要和按需导出的相同</p></li><li><p>直接导入并执行模块代码 <strong>import ‘./m1.js’ ,</strong>不暴露m1的成员，直接执行m1.js<br><a name="xRwDj"></a></p><h1 id="二、webpack"><a href="#二、webpack" class="headerlink" title="二、webpack"></a>二、webpack</h1><p><a name="UpjCf"></a></p><h4 id="1、webpack"><a href="#1、webpack" class="headerlink" title="1、webpack"></a>1、webpack</h4></li><li><p>前端项目打包工具</p></li><li><p>功能：模块化友好，代码压缩混淆、js兼容问题，性能优化等</p></li><li><p>ul&gt;li{这是第$个}*9，实现9列<br><a name="ymYTX"></a></p><h4 id="2、基本使用"><a href="#2、基本使用" class="headerlink" title="2、基本使用"></a>2、基本使用</h4></li><li><p>npm init -y 初始化webpack，创建package.json文件，然后创建src文件夹，index.js中包含所用的方法<br><a name="BpVXg"></a></p><h4 id="3、在项目中使用"><a href="#3、在项目中使用" class="headerlink" title="3、在项目中使用"></a>3、在项目中使用</h4></li><li><p>npm install webpack webpack-cli -D，然后创建package.config.js</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584459101662-a06c5243-749a-4601-bfcd-b1dc89236c26.png#align=left&display=inline&height=76&name=image.png&originHeight=151&originWidth=460&size=8715&status=done&style=none&width=230" alt="image.png"></p><ul><li>在package.json中，</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584461481927-3d26970b-4f9e-4eea-b3a4-085d0f20baf1.png#align=left&display=inline&height=81&name=image.png&originHeight=161&originWidth=575&size=10668&status=done&style=none&width=287.5" alt="image.png"><br><a name="US0Xe"></a></p><h4 id="4、打包的入口和出口"><a href="#4、打包的入口和出口" class="headerlink" title="4、打包的入口和出口"></a>4、打包的入口和出口</h4><ul><li>默认入口：src-&gt;index.js</li><li>打包输出文件： dist-&gt;main.js</li><li>修改默认出入口</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584462771067-44b896eb-4883-4bbe-80a0-716a01eb25b2.png#align=left&display=inline&height=140&name=image.png&originHeight=279&originWidth=675&size=20264&status=done&style=none&width=337.5" alt="image.png"><br><a name="CL0na"></a></p><h4 id="5、webpack自动打包"><a href="#5、webpack自动打包" class="headerlink" title="5、webpack自动打包"></a>5、webpack自动打包</h4><ul><li><p>npm install webpack-dev-server -D安装，修改package.json-&gt;script  dev：”webpack-dev-server”，index.html中引用的script改为bundle.js  然后运行 npm run dev<br><a name="ASOYV"></a></p><h4 id="6、配置html-webpack-plugin生成预览页面"><a href="#6、配置html-webpack-plugin生成预览页面" class="headerlink" title="6、配置html-webpack-plugin生成预览页面"></a>6、配置html-webpack-plugin生成预览页面</h4></li><li><p>npm install html-webpack-plugin -D安装插件</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584531500364-bdf9315f-5581-47b6-a86d-1186e4f0171b.png#align=left&display=inline&height=140&name=image.png&originHeight=280&originWidth=842&size=29547&status=done&style=none&width=421" alt="image.png"><br><a name="W7mYB"></a></p><h4 id="7、package-json中的配置"><a href="#7、package-json中的配置" class="headerlink" title="7、package.json中的配置"></a>7、package.json中的配置</h4><ul><li><p>–open 打包后自动打开网页</p></li><li><p>–host 配置ip –host 127.0.0.1</p></li><li><p>–port配置端口 –port 8888<br><a name="J3QFU"></a></p><h4 id="8、webpack加载器–loader打包非js结尾的模块"><a href="#8、webpack加载器–loader打包非js结尾的模块" class="headerlink" title="8、webpack加载器–loader打包非js结尾的模块"></a>8、webpack加载器–loader打包非js结尾的模块</h4></li><li><p>打包css/less/sess文件 npm i style-loader css-loader -D安装less-loader/sess-loader</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584540093835-427dc729-1390-49db-980d-560bbbb0859a.png#align=left&display=inline&height=135&name=image.png&originHeight=270&originWidth=852&size=26002&status=done&style=none&width=426" alt="image.png"></p><p><a name="pI340"></a></p><h4 id="9、webpack加载器–配置postCSS自动添加css兼容前缀"><a href="#9、webpack加载器–配置postCSS自动添加css兼容前缀" class="headerlink" title="9、webpack加载器–配置postCSS自动添加css兼容前缀"></a>9、webpack加载器–配置postCSS自动添加css兼容前缀</h4><ul><li>运行npm i postcss-loader autoprefixer -D</li><li>根目录创建配置文件postcss.config.js,并在<strong>webpack.config.js中module-&gt;rules中加入postcss-loader</strong></li></ul><p><strong><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584540886725-05a9b4a8-1e3b-418d-ac9b-98b3f290e0cd.png#align=left&display=inline&height=79&name=image.png&originHeight=158&originWidth=503&size=9720&status=done&style=none&width=251.5" alt="image.png"></strong><br />**<br><a name="ImOAL"></a></p><h4 id="10、webpack加载器–打包图片和字体"><a href="#10、webpack加载器–打包图片和字体" class="headerlink" title="10、webpack加载器–打包图片和字体"></a>10、webpack加载器–打包图片和字体</h4><ul><li>npm i url-loader file-loader -D</li><li>在webpack.config.js中module-&gt;rules中加入如下规则</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584541555342-da4c7182-071c-4b30-bc35-121cfcdd3499.png#align=left&display=inline&height=189&name=image.png&originHeight=377&originWidth=873&size=41931&status=done&style=none&width=436.5" alt="image.png"></p><p><a name="x9Pz2"></a></p><h4 id="11、webpack加载器–打包js文件中的高级语法"><a href="#11、webpack加载器–打包js文件中的高级语法" class="headerlink" title="11、webpack加载器–打包js文件中的高级语法"></a>11、webpack加载器–打包js文件中的高级语法</h4><ul><li>安装babel转换器相关的包</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584542326766-400c145a-0dc0-4563-86b8-e1b6a34ce48d.png#align=left&display=inline&height=50&name=image.png&originHeight=100&originWidth=617&size=59119&status=done&style=none&width=308.5" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584542874992-698dc63a-a39a-4dc8-b8e6-5d35f58f1172.png#align=left&display=inline&height=120&name=image.png&originHeight=241&originWidth=951&size=28577&status=done&style=none&width=475.5" alt="image.png"><br /></p><p><a name="s4kF7"></a></p><h4 id="12、webpack加载器–配置vue组件"><a href="#12、webpack加载器–配置vue组件" class="headerlink" title="12、webpack加载器–配置vue组件"></a>12、webpack加载器–配置vue组件</h4><ul><li>npm i vue-loader vue-template-compiler -D</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584545532437-f3cc94c1-ccf9-4948-995a-444f81ea2430.png#align=left&display=inline&height=181&name=image.png&originHeight=361&originWidth=792&size=24755&status=done&style=none&width=396" alt="image.png"><br><a name="tcsBb"></a></p><h4 id="13、webpack使用vue"><a href="#13、webpack使用vue" class="headerlink" title="13、webpack使用vue"></a>13、webpack使用vue</h4><ul><li>npm i vue -S 安装</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584546247787-3550a3b1-363a-43f7-8849-b48186d3b266.png#align=left&display=inline&height=111&name=image.png&originHeight=222&originWidth=652&size=22094&status=done&style=none&width=326" alt="image.png"><br><a name="DjXKS"></a></p><h4 id="14、webpack-打包发布vue"><a href="#14、webpack-打包发布vue" class="headerlink" title="14、webpack 打包发布vue"></a>14、webpack 打包发布vue</h4><ul><li>在package.json 中配置scripts： “build”：”webpack -p”,即可通过npm run build 打包</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;内容同步更新在语雀笔记里~&lt;br&gt;&lt;a name=&quot;NsGDe&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;一、ES6模块化&quot;&gt;&lt;a href=&quot;#一、ES6模块化&quot; class=&quot;headerlink&quot; title=&quot;一、ES6模块化&quot;&gt;&lt;/a&gt;一、ES6模块化&lt;/h1&gt;&lt;p&gt;&lt;
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="webpack" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/webpack/"/>
    
    
      <category term="webpack" scheme="https://hezhaoxiang.work/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>web前端--ES6初探</title>
    <link href="https://hezhaoxiang.work/2020/learnes6-01/"/>
    <id>https://hezhaoxiang.work/2020/learnes6-01/</id>
    <published>2020-03-10T10:36:00.000Z</published>
    <updated>2020-09-07T18:08:49.588Z</updated>
    
    <content type="html"><![CDATA[<hr><p><a name="b5WDa"></a></p><h4 id="let声明变量"><a href="#let声明变量" class="headerlink" title="let声明变量"></a>let声明变量</h4><ul><li><p>ES6中新增的变量，只在块级作用域中有效（一个大括号中）；</p></li><li><p>防止循环中的变量变成全局变量；</p></li><li><p>不存在变量提升，暂时性死区（一个大括号内，对let变量先使用后定义，报错undefined）如：var num=10；if(1){ console.log(num) let num; }<br><a name="EpwRw"></a></p><h4 id="const声明常量"><a href="#const声明常量" class="headerlink" title="const声明常量"></a>const声明常量</h4></li><li><p>值不可更改（值对应内存地址），具有块级作用域，声明时必须赋值，否则报错；<br><a name="qx7dt"></a></p><h4 id="var"><a href="#var" class="headerlink" title="var"></a>var</h4></li><li><p>存在变量提升，作用域是整个函数<br><a name="yQH3p"></a></p><h4 id="解构"><a href="#解构" class="headerlink" title="解构"></a>解构</h4></li><li><p>从数组中提取值，变量对应的位置进行重新赋值。如let【a,b,c,d】=[1,2,5]</p></li><li><p>解构不成功的部分为undefined，如d</p></li><li><p>允许使用对象属性和变量名匹配，把值赋给变量，如let person ={name：“bob“} let {name}=person</p></li><li><p>如：*<em>let{name：myname } = person *</em>，把person中的bob赋值给myname<br><a name="70NMw"></a></p><h4 id="箭头函数-（）-gt"><a href="#箭头函数-（）-gt" class="headerlink" title="箭头函数 （）=&gt;{}"></a>箭头函数 （）=&gt;{}</h4></li><li><p>使用方法：通常把箭头函数赋值给变量，然后调用，如 const fn = （）=&gt;{ console.log(1)};    fn();</p></li><li><p>函数中只有一行代码，大括号可省略,return可省略如： const sum=(n1,n2)=&gt;n1+n2;  sum(3,5);  </p></li><li><p>只有一个形参，小括号可省略const sum = n1=&gt;n1</p></li><li><p><strong>箭头函数不绑定this关键字，其中的this指向函数定义上下文的this</strong></p></li></ul><p><strong>剩余参数</strong></p><ul><li>const sum= （…args）=&gt;{} …表示接受所有参数。</li></ul><p><img src="https://hezhaoxiang.coding.net/s/d73ed8c0-a8cf-416f-9de9-70a2b1a05046" alt="image.png"><br><a name="2dsxt"></a></p><h4 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h4><ul><li><p>用于数组合并 let array3=【…ary1,…ary2】</p></li><li><p>用于数组push ary1.push（…ary2）</p></li><li><p>将伪数组或对象转换为数组<br><a name="4Fp3x"></a></p><h3 id="Array扩展方法"><a href="#Array扩展方法" class="headerlink" title="Array扩展方法"></a>Array扩展方法</h3><p><a name="BS9oY"></a></p><h4 id="from-转换为数组"><a href="#from-转换为数组" class="headerlink" title="from,转换为数组"></a>from,转换为数组</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/676682/1584377222993-9ac22b8b-af38-491d-aaa6-8c3c12616560.png#align=left&display=inline&height=93&name=image.png&originHeight=187&originWidth=540&size=9670&status=done&style=none&width=270" alt="image.png"><br><a name="mpbUC"></a></p><h4 id="find-找到某元素"><a href="#find-找到某元素" class="headerlink" title="find 找到某元素"></a>find 找到某元素</h4></li><li><p>var id = arraylike.find(item=&gt;item.id==2)<br><a name="vfTix"></a></p><h4 id="findIndex-找到下标，否则-1"><a href="#findIndex-找到下标，否则-1" class="headerlink" title="findIndex,找到下标，否则-1"></a>findIndex,找到下标，否则-1</h4></li><li><p>let findex = alike.findIndex((item,index)=&gt;item==100)<br><a name="degm7"></a></p><h4 id="includes（），是否包含某值，"><a href="#includes（），是否包含某值，" class="headerlink" title="includes（），是否包含某值，"></a>includes（），是否包含某值，</h4></li><li><p>返回true和false 【1，2，3】.includes（4）<br><a name="ZhXF6"></a></p><h3 id="String，模板字符串"><a href="#String，模板字符串" class="headerlink" title="String，模板字符串"></a>String，模板字符串</h3></li><li><p>模板字符串：反引号定义字符串，可以通过${变量名}来引用</p></li><li><p>可以使用${函数名}调用, 模板字符串可以包含换行可以<br><a name="QWayp"></a></p><h4 id="扩展方法startsWith-和endsWith"><a href="#扩展方法startsWith-和endsWith" class="headerlink" title="扩展方法startsWith 和endsWith"></a>扩展方法startsWith 和endsWith</h4></li><li><p>返回是否以某字符（或某几个）开头或结尾，true/false。 str1.startsWith（‘hello’）<br><a name="yPbVU"></a></p><h4 id="repeat"><a href="#repeat" class="headerlink" title="repeat"></a>repeat</h4></li><li><p>str.repeat（3）str重复3遍<br><a name="CEfFK"></a></p><h4 id="Set数据结构"><a href="#Set数据结构" class="headerlink" title="Set数据结构"></a>Set数据结构</h4></li><li><p>值唯一，没有重复值(自动去重) const s1= new Set([1，1，1，3,3,5,7]);</p></li><li><p>Set实例方法：s1.add(3), delete(), has(), clear()</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;a name=&quot;b5WDa&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;let声明变量&quot;&gt;&lt;a href=&quot;#let声明变量&quot; class=&quot;headerlink&quot; title=&quot;let声明变量&quot;&gt;&lt;/a&gt;let声明变量&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ES6中新增的变
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="ES6" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/ES6/"/>
    
    
      <category term="ES6" scheme="https://hezhaoxiang.work/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>web前端--JavaScript（五）JavaScript高级程序设计-笔记总结-1-6章</title>
    <link href="https://hezhaoxiang.work/2020/learnjs05-base0/"/>
    <id>https://hezhaoxiang.work/2020/learnjs05-base0/</id>
    <published>2020-02-21T11:36:00.000Z</published>
    <updated>2020-03-11T19:40:04.255Z</updated>
    
    <content type="html"><![CDATA[<p>大致看过一遍红宝书，想让自己留下点东西。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1583955555411-7331530f-97a6-4605-af3d-8755930779ac.jpeg#align=left&display=inline&height=800&originHeight=800&originWidth=800&size=0&status=done&style=none&width=800" alt=""></p><h4 id="script属性"><a href="#script属性" class="headerlink" title="script属性"></a>script属性</h4><ul><li><p>defer属性，表示加载完dom后再解析js，只适应于外部js脚本。</p></li><li><p>async属性：当前js脚本加载不必等其他脚本，不能保证异步正常展示。<br><a name="51WG6"></a></p><h4 id="外部js优点："><a href="#外部js优点：" class="headerlink" title="外部js优点："></a>外部js优点：</h4></li><li><p>可维护性</p></li><li><p>可缓存：两个页面使用同一js，只要加载一次。</p></li></ul><p>js语句的分号建议一直使用；；<br><a name="scqA1"></a></p><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li>基本：字符，数值，布尔（true和false区分大小写），null，undefined</li><li>引用类型：数组，对象</li><li>typeof temp或者typeof（temp） <strong>ty**</strong>peof null 返回object**</li></ul><p>3，14e2=314<br><a name="LaaPN"></a></p><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><ul><li><p>特殊数值NaN：涉及的操作均为NaN；与任何值不等，不等Nan</p></li><li><p>Number（）：null和空字符串–》0</p></li><li><p>parseInt（”124as”）空字符–》Nan</p></li><li><p><strong>var num= Math.pow(5,2) //25</strong><br><a name="JQu87"></a></p><h4 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h4></li><li><p>num.toString（）,num.String() </p></li><li><p>num.valueOf()返回数组形式</p></li><li><p>concat或者+：  拼接</p></li><li><p>str1.trim()<br><a name="IPrr2"></a></p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4></li><li><p>函数内定义的var temp变量，在函数外会被销毁，而只定义temp作为全局变量会保留；</p></li></ul><p>不能重载，即函数覆盖。<br />作用域链</p><ul><li><p>在执行环境中可以访问相应的变量，函数外不能访问函数内的，内可以访问外的。<br><a name="zvyIQ"></a></p><h4 id="垃圾收集的策略"><a href="#垃圾收集的策略" class="headerlink" title="垃圾收集的策略"></a>垃圾收集的策略</h4></li><li><p>标记清除：不使用的值加标记，离开执行环境即清除。</p></li><li><p>引用计数：引用次数，归0时清除。<br><a name="PHjWs"></a></p><h4 id="数组item-Array"><a href="#数组item-Array" class="headerlink" title="数组item Array"></a>数组item Array</h4></li><li><p>栈push pop</p></li><li><p>队列shift取出第一个，unshift末尾增加</p></li><li><p>reverse（）反转</p></li><li><p><strong>color.slice（1）,转为拼接字符串</strong></p></li><li><p><strong>num.indexOf(6) 返回下标或-1</strong></p></li><li><p>splice（）删除，插入，替换</p></li><li><p>filter（）过滤，括号内+条件-》</p></li><li><p>map（function(){}）数组值转换</p></li><li><p>reduce（function）迭代累加<br><a name="9kpxW"></a></p><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4></li><li><p>var patten1 = /[cb]at/i;   //匹配第一个包含cat和bat的字符</p></li><li><p>var patten2 = /{cb}at/i;  {cb}at</p></li><li><p>var jiewei=/.doc/gi;<br><a name="s6K10"></a></p><h4 id="函数内置属性"><a href="#函数内置属性" class="headerlink" title="函数内置属性"></a>函数内置属性</h4></li><li><p>arguement.callee: 消除紧密藕合，即，在别处也可使用该函数（递归调用后，可以继续使用）</p></li><li><p>this，函数在全局作用域运行时，this=window </p></li></ul><p><strong>eval（）内的变量或函数都不会提升</strong><br><a name="wkwPF"></a></p><h4 id="创建对象（五种方式）"><a href="#创建对象（五种方式）" class="headerlink" title="创建对象（五种方式）"></a>创建对象（五种方式）</h4><ul><li><strong>工厂模式：函数内创建对象，最后return 对象。使用时var person= createPerson（‘hzx’，29）</strong></li><li><strong>构造函数：函数内使用this，无需return。使用时var person = new creatPerson（）</strong></li><li><strong>原型模式: prototype所有成员共享属性和方法，各自实例可以修改自己的值。**</strong>存在问题：两个实例共享的原型，属性值是引用类型时，该值会被共享。2、**</li></ul><p>function Person {<br />    person.prototype.name=name  }</p><ul><li><p>组合使用构造函数和原型：构造函数定义实例，原型定义共享的属性和方法</p></li><li><p>动态原型：属性和方法，在方法中使用prototype<br><a name="2oeXq"></a></p><h4 id="原型链理解"><a href="#原型链理解" class="headerlink" title="原型链理解"></a>原型链理解</h4></li><li><p>一个原型对象A（包括属性和方法）被另一个原型B继承，B可以使用A的属性和方法。</p></li><li><p>B.prototype= new A()</p></li><li><p>存在问题：1、引用类型的属性值会共享 2、无法向原型A中传参。解决方法（借用构造函数和组合继承）</p></li></ul><p><strong>借用构造函数</strong></p><ul><li><strong>使用call（）和apply（）: 子构造函数中，funA{ funA.call(this)}</strong></li></ul><p><strong>组合继承（使用最多）</strong></p><ul><li>使用原型链实现原型的属性和方法继承</li><li>借用构造继承实例的属性</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大致看过一遍红宝书，想让自己留下点东西。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1583955555411-7331530f-97a6-4605-af3d-8755930779ac.j
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>web前端--JavaScript（五）JavaScript高级程序设计-笔记总结-1-6章</title>
    <link href="https://hezhaoxiang.work/2020/learnjs05-base0/"/>
    <id>https://hezhaoxiang.work/2020/learnjs05-base0/</id>
    <published>2020-02-21T11:36:00.000Z</published>
    <updated>2020-03-11T19:40:04.255Z</updated>
    
    <content type="html"><![CDATA[<p>大致看过一遍红宝书，想让自己留下点东西。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1583955555411-7331530f-97a6-4605-af3d-8755930779ac.jpeg#align=left&display=inline&height=800&originHeight=800&originWidth=800&size=0&status=done&style=none&width=800" alt=""></p><h4 id="script属性"><a href="#script属性" class="headerlink" title="script属性"></a>script属性</h4><ul><li><p>defer属性，表示加载完dom后再解析js，只适应于外部js脚本。</p></li><li><p>async属性：当前js脚本加载不必等其他脚本，不能保证异步正常展示。<br><a name="51WG6"></a></p><h4 id="外部js优点："><a href="#外部js优点：" class="headerlink" title="外部js优点："></a>外部js优点：</h4></li><li><p>可维护性</p></li><li><p>可缓存：两个页面使用同一js，只要加载一次。</p></li></ul><p>js语句的分号建议一直使用；；<br><a name="scqA1"></a></p><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li>基本：字符，数值，布尔（true和false区分大小写），null，undefined</li><li>引用类型：数组，对象</li><li>typeof temp或者typeof（temp） <strong>ty**</strong>peof null 返回object**</li></ul><p>3，14e2=314<br><a name="LaaPN"></a></p><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><ul><li><p>特殊数值NaN：涉及的操作均为NaN；与任何值不等，不等Nan</p></li><li><p>Number（）：null和空字符串–》0</p></li><li><p>parseInt（”124as”）空字符–》Nan</p></li><li><p><strong>var num= Math.pow(5,2) //25</strong><br><a name="JQu87"></a></p><h4 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h4></li><li><p>num.toString（）,num.String() </p></li><li><p>num.valueOf()返回数组形式</p></li><li><p>concat或者+：  拼接</p></li><li><p>str1.trim()<br><a name="IPrr2"></a></p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4></li><li><p>函数内定义的var temp变量，在函数外会被销毁，而只定义temp作为全局变量会保留；</p></li></ul><p>不能重载，即函数覆盖。<br />作用域链</p><ul><li><p>在执行环境中可以访问相应的变量，函数外不能访问函数内的，内可以访问外的。<br><a name="zvyIQ"></a></p><h4 id="垃圾收集的策略"><a href="#垃圾收集的策略" class="headerlink" title="垃圾收集的策略"></a>垃圾收集的策略</h4></li><li><p>标记清除：不使用的值加标记，离开执行环境即清除。</p></li><li><p>引用计数：引用次数，归0时清除。<br><a name="PHjWs"></a></p><h4 id="数组item-Array"><a href="#数组item-Array" class="headerlink" title="数组item Array"></a>数组item Array</h4></li><li><p>栈push pop</p></li><li><p>队列shift取出第一个，unshift末尾增加</p></li><li><p>reverse（）反转</p></li><li><p><strong>color.slice（1）,转为拼接字符串</strong></p></li><li><p><strong>num.indexOf(6) 返回下标或-1</strong></p></li><li><p>splice（）删除，插入，替换</p></li><li><p>filter（）过滤，括号内+条件-》</p></li><li><p>map（function(){}）数组值转换</p></li><li><p>reduce（function）迭代累加<br><a name="9kpxW"></a></p><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4></li><li><p>var patten1 = /[cb]at/i;   //匹配第一个包含cat和bat的字符</p></li><li><p>var patten2 = /{cb}at/i;  {cb}at</p></li><li><p>var jiewei=/.doc/gi;<br><a name="s6K10"></a></p><h4 id="函数内置属性"><a href="#函数内置属性" class="headerlink" title="函数内置属性"></a>函数内置属性</h4></li><li><p>arguement.callee: 消除紧密藕合，即，在别处也可使用该函数（递归调用后，可以继续使用）</p></li><li><p>this，函数在全局作用域运行时，this=window </p></li></ul><p><strong>eval（）内的变量或函数都不会提升</strong><br><a name="wkwPF"></a></p><h4 id="创建对象（五种方式）"><a href="#创建对象（五种方式）" class="headerlink" title="创建对象（五种方式）"></a>创建对象（五种方式）</h4><ul><li><strong>工厂模式：函数内创建对象，最后return 对象。使用时var person= createPerson（‘hzx’，29）</strong></li><li><strong>构造函数：函数内使用this，无需return。使用时var person = new creatPerson（）</strong></li><li><strong>原型模式: prototype所有成员共享属性和方法，各自实例可以修改自己的值。**</strong>存在问题：两个实例共享的原型，属性值是引用类型时，该值会被共享。2、**</li></ul><p>function Person {<br />    person.prototype.name=name  }</p><ul><li><p>组合使用构造函数和原型：构造函数定义实例，原型定义共享的属性和方法</p></li><li><p>动态原型：属性和方法，在方法中使用prototype<br><a name="2oeXq"></a></p><h4 id="原型链理解"><a href="#原型链理解" class="headerlink" title="原型链理解"></a>原型链理解</h4></li><li><p>一个原型对象A（包括属性和方法）被另一个原型B继承，B可以使用A的属性和方法。</p></li><li><p>B.prototype= new A()</p></li><li><p>存在问题：1、引用类型的属性值会共享 2、无法向原型A中传参。解决方法（借用构造函数和组合继承）</p></li></ul><p><strong>借用构造函数</strong></p><ul><li><strong>使用call（）和apply（）: 子构造函数中，funA{ funA.call(this)}</strong></li></ul><p><strong>组合继承（使用最多）</strong></p><ul><li>使用原型链实现原型的属性和方法继承</li><li>借用构造继承实例的属性</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大致看过一遍红宝书，想让自己留下点东西。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/jpeg/676682/1583955555411-7331530f-97a6-4605-af3d-8755930779ac.j
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>购物首页开发</title>
    <link href="https://hezhaoxiang.work/2019/mall-home-all/"/>
    <id>https://hezhaoxiang.work/2019/mall-home-all/</id>
    <published>2019-12-26T14:30:00.000Z</published>
    <updated>2020-09-07T18:58:28.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="零、说明"><a href="#零、说明" class="headerlink" title="零、说明"></a>零、说明</h1><p>本demo是跟随coderwhy老师学习Vue做的，跟着视频一点点敲的，视频可以在b站上找到，仅限个人学习，侵删（应该不涉及侵权吧，就当给老师宣传了哈哈哈，视频真的讲的很细致，一点点学还是有收获的<del>，自己码的<a href="https://hezhaoxiang.work/">demo在这里</a>！博客里有github</del>）</p><h1 id="一、整体思路"><a href="#一、整体思路" class="headerlink" title="一、整体思路"></a>一、整体思路</h1><h1 id="1、效果图"><a href="#1、效果图" class="headerlink" title="1、效果图"></a>1、效果图</h1><p>先上整体效果图~<br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577368803629-bb382dad-293e-45d5-8ddd-842314f1b79e.png#align=left&display=inline&height=500&name=image.png&originHeight=610&originWidth=424&size=208891&status=done&style=none&width=347" alt="image.png">)<img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577369089041-0046166c-a84e-447a-934e-c62629835086.png#align=left&display=inline&height=490&name=image.png&originHeight=603&originWidth=356&size=232393&status=done&style=none&width=289" alt="image.png"><br>这是我跟着视频做的，主要分为<strong>四个功能模块“首页、分类、购物车、我的”</strong></p><h1 id="2、首页功能"><a href="#2、首页功能" class="headerlink" title="2、首页功能"></a>2、首页功能</h1><p>目前基本实现首页，首页中包括以下几个功能（从上到下）：</p><ol><li>标题栏Navbar</li><li>本周流行recommend</li><li>商品栏tab-control</li><li>商品列表goodList</li><li>导航栏（应该是0步，最先开始）</li></ol><p>最下方的导航栏作为公共组件，可复用。</p><h1 id="二、首页具体实现"><a href="#二、首页具体实现" class="headerlink" title="二、首页具体实现"></a>二、首页具体实现</h1><h2 id="0、导航栏tabbar"><a href="#0、导航栏tabbar" class="headerlink" title="0、导航栏tabbar"></a>0、导航栏tabbar</h2><p>思想：组件复用<br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577369654098-cb1e061d-4cf2-4ec6-b0ea-0108d68f387c.png#align=left&display=inline&height=294&name=image.png&originHeight=241&originWidth=437&size=13337&status=done&style=none&width=533" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577369684295-93fb63ed-c5a5-46ec-814b-2278dabae880.png#align=left&display=inline&height=291&name=image.png&originHeight=291&originWidth=931&size=39035&status=done&style=none&width=931" alt="image.png"></p><h2 id="1-CSS格式引用"><a href="#1-CSS格式引用" class="headerlink" title="1, CSS格式引用"></a>1, CSS格式引用</h2><h2 id="normalize-css：常用格式，从github上引用"><a href="#normalize-css：常用格式，从github上引用" class="headerlink" title="normalize.css：常用格式，从github上引用"></a>normalize.css：常用格式，从github上引用</h2><p>css引用方式：<br>（1）在html中：<code>&lt;link ref=&quot;xx.css&quot;&gt;</code><br>（2）在另外一个css中： <a href="#">@import</a><code>&quot;css文件路径/url&quot;</code></p><h2 id="2，组件引用路径配置"><a href="#2，组件引用路径配置" class="headerlink" title="2，组件引用路径配置"></a>2，组件引用路径配置</h2><p>根目录下创建 vue.config.js<br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577067046833-ed1cb881-c1d8-4c6b-bf33-172aed7be5a0.png#align=left&display=inline&height=428&name=image.png&originHeight=428&originWidth=914&size=36261&status=done&style=none&width=914" alt="image.png"></p><p>图片的引用路径，前加~<br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577067545443-5c1ba149-8565-42a8-979e-9f0e3f131322.png#align=left&display=inline&height=154&name=image.png&originHeight=154&originWidth=940&size=23047&status=done&style=none&width=940" alt="image.png"><br>修改icon网站图标：在public中 favicon.ico</p><h2 id="3-顶端导航组件"><a href="#3-顶端导航组件" class="headerlink" title="3, 顶端导航组件"></a>3, 顶端导航组件</h2><p>nav-tab-bar，创建组件，使用插槽将顶部的bar分为左中右三部分，在首页中只展示center的slot内容“购物街”<br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577103302820-d42c43ff-0439-47e3-b6b8-3e350294d838.png#align=left&display=inline&height=460&name=image.png&originHeight=460&originWidth=731&size=45953&status=done&style=none&width=731" alt="image.png"></p><h2 id="4-请求多个数据"><a href="#4-请求多个数据" class="headerlink" title="4, 请求多个数据"></a>4, 请求多个数据</h2><p><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577102761672-aad6e418-fc7c-4122-9e4d-801c648009fa.png#align=left&display=inline&height=405&name=image.png&originHeight=405&originWidth=724&size=33264&status=done&style=none&width=724" alt="image.png"></p><ul><li><input disabled="" type="checkbox"> <img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577102470371-a7ceda98-d7c3-428b-b177-7aa06965b00f.png#align=left&display=inline&height=266&name=image.png&originHeight=266&originWidth=254&size=10452&status=done&style=none&width=254" alt="image.png"></li></ul><h2 id="6，-tab-control"><a href="#6，-tab-control" class="headerlink" title="6， tab-control"></a>6， tab-control</h2><p>流行、新款、精选<br><code>position: sticky</code><br>top: 44px //设置可随页面下滑，上滑到44处固定</p><h2 id="7，-商品列表数据，获取保存"><a href="#7，-商品列表数据，获取保存" class="headerlink" title="7， 商品列表数据，获取保存"></a>7， 商品列表数据，获取保存</h2><p>所有数据data{pop:{page:0,list:[]},<br>news:{page:0,list:[]}<br>sell :{page:0,list:[]}<br>}</p><h2 id="8-点击，显示相应列表数据"><a href="#8-点击，显示相应列表数据" class="headerlink" title="8, 点击，显示相应列表数据"></a>8, 点击，显示相应列表数据</h2><h2 id="9，-移动端滑动效果"><a href="#9，-移动端滑动效果" class="headerlink" title="9， 移动端滑动效果"></a>9， 移动端滑动效果</h2><p>使用better-scroll框架（github）<br>安装： npm install better-scroll –save<br>局部滚动</p><p>ref如果是绑定在组件中的，那个通过t*<em>his.$refs.ref名字 *</em>获取的是一个元素对象。</p><p>10，back-top实现<br>监听组件的原生事件<br><strong>方法一</strong>：使用修饰符click.native<br><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577350858561-34b3410c-673f-4412-b0af-78ecab55cbff.png#align=left&display=inline&height=35&name=image.png&originHeight=35&originWidth=450&size=3917&status=done&style=none&width=450" alt="image.png"><br>方法二：在组件内使用this.$emit传给组件，再实现函数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;零、说明&quot;&gt;&lt;a href=&quot;#零、说明&quot; class=&quot;headerlink&quot; title=&quot;零、说明&quot;&gt;&lt;/a&gt;零、说明&lt;/h1&gt;&lt;p&gt;本demo是跟随coderwhy老师学习Vue做的，跟着视频一点点敲的，视频可以在b站上找到，仅限个人学习，侵删（应该不涉及
      
    
    </summary>
    
      <category term="Demo" scheme="https://hezhaoxiang.work/categories/Demo/"/>
    
      <category term="购物-Vue" scheme="https://hezhaoxiang.work/categories/Demo/%E8%B4%AD%E7%89%A9-Vue/"/>
    
    
      <category term="购物" scheme="https://hezhaoxiang.work/tags/%E8%B4%AD%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>使用电脑，你不能不知道的技巧</title>
    <link href="https://hezhaoxiang.work/2019/how-to-use-pc/"/>
    <id>https://hezhaoxiang.work/2019/how-to-use-pc/</id>
    <published>2019-12-19T13:00:00.000Z</published>
    <updated>2019-12-22T11:58:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a name="KHtet"></a></p><h1 id="（一）学计算机必备"><a href="#（一）学计算机必备" class="headerlink" title="（一）学计算机必备"></a>（一）学计算机必备</h1><p>先占，待更<br />12月21日，继续更<br />前几日入手了一台新笔记本，于是准备重新装一些日常用的软件，学习前端或者程序员必备的几个软件：chrome谷歌浏览器，git.bash,webstorm或者VS Code，主要是这些，附推荐理由：</p><ul><li><strong>谷歌浏览器</strong>：觉得应当人手必备，扩展程序支持很多功能，adblock插件（去广告），vue dev插件调试很方便，oneTab插件（网页整理成列表，打开多个网页去找很方便），还有一个油猴子插件（百度就能搜到安装方法，功能真的很强大，附个截图就懂了</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1576934295498-c8121fa8-cc3a-4415-8dd7-b98e49743950.png#align=left&display=inline&height=593&name=image.png&originHeight=593&originWidth=1438&size=140342&status=done&style=none&width=1438" alt="image.png"><br /> 这些都是油猴子中的脚本，使用时打开，不用的时候就关上，也不占内存。</p><ul><li><strong>git：</strong>配合github使用更香哦，主要是用以将代码上传到github下载到本地，同步很方便。</li><li><strong>webstorm或者VS Code</strong>：前者是专用于web开发，我现在也在用，后者功能也很强大，知乎不少程序猿推荐。webstorm和idea这些软件同属一家公司研发，使用学校的edu邮箱注册能免费用一年，或者百度有破解的方法，弄比较费时间就直接用邮箱注册了。<br><a name="Vkzto"></a><h1 id="（二）高效软件"><a href="#（二）高效软件" class="headerlink" title="（二）高效软件"></a>（二）高效软件</h1><a name="5L4Xx"></a><h2 id="1，WindowsTabs标签页"><a href="#1，WindowsTabs标签页" class="headerlink" title="1，WindowsTabs标签页"></a>1，WindowsTabs标签页</h2>上图：<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1576998980100-2467df43-e2e9-4cfb-a239-9f51d1541cf6.png#align=left&display=inline&height=674&name=image.png&originHeight=674&originWidth=1344&size=99489&status=done&style=none&width=1344" alt="image.png"></li></ul><p>windowTab来管理标签页很方便，不用alt+Tab键来切换，直接点击就可以，软件也很小2m多一点。本方法用的是汉化pojie版，所以能支持任意个标签页，而老东家microsoft给的正版只能打开三个，想任意个就得付费了，毕竟那么好用。所以我就给出了我在网上找到的安装包，如下：WindowsTabs <a href="https://www.lanzous.com/i87gnaj" target="_blank" rel="noopener">链接</a><br><a name="t44rt"></a></p><h2 id="2，everything搜索文件"><a href="#2，everything搜索文件" class="headerlink" title="2，everything搜索文件"></a>2，everything搜索文件</h2><p>真的真的，很方便！安装包也很小，2m左右，打开窗口可以在几秒内搜到你想找的文件，比win系统自带的文件搜索快的太多太多，秒搜，sousou~<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577000020744-3943845b-6141-4bb8-a986-f482bf254023.png#align=left&display=inline&height=670&name=image.png&originHeight=670&originWidth=794&size=93404&status=done&style=none&width=794" alt="image.png"><br />everything<a href="https://www.lanzous.com/i87gncb" target="_blank" rel="noopener">链接</a><br><a name="IXiVa"></a></p><h2 id="3，Snipaste-秒杀一切的截图软件"><a href="#3，Snipaste-秒杀一切的截图软件" class="headerlink" title="3，Snipaste 秒杀一切的截图软件"></a>3，<a href="https://www.lanzous.com/i87gncb" target="_blank" rel="noopener">Snipaste</a> 秒杀一切的截图软件</h2><p>确实不夸张，占内存小，一键截图，支持贴图按F1截图，按F3贴图（随意贴在桌面上备用，用完一键删除）。曾经我也是用qq带的截图功能ctrl+alt+A，但是有了snipaste，真心方便也有其他功能的设置，觉得麻烦直接双击安装就可以。在<a href="https://www.lanzous.com/i87gncb" target="_blank" rel="noopener">这里</a><br /><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577000641094-f1508cff-3e75-4656-b2f3-a026543e80fe.png#align=left&display=inline&height=686&name=image.png&originHeight=686&originWidth=853&size=113149&status=done&style=none&width=853" alt="image.png"></p><p><a name="wMZ0A"></a></p><h2 id="4，-infinity谷歌浏览器插件"><a href="#4，-infinity谷歌浏览器插件" class="headerlink" title="4， infinity谷歌浏览器插件"></a>4， infinity谷歌浏览器插件</h2><p>用着很舒服，不得不说，设计的很人性化，上使用截图<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1577001824126-342e23bd-e275-46b6-bbad-67bdd9a1ac45.png#align=left&display=inline&height=588&name=image.png&originHeight=588&originWidth=1169&size=916030&status=done&style=none&width=1169" alt="image.png"><br />支持浏览器内换壁纸，这里只是展示一部分，还有很多小功能infinity都自带了，安装谷歌浏览器插件的方法<br />（1）“科学上网”在谷歌商店中搜infinity插件<br />（2）把我给的<a href="https://www.lanzous.com/i87hxbg" target="_blank" rel="noopener">crx插件</a>直接拖到扩展程序中，使用开发者模式就可以。<br><a name="uCTLk"></a></p><h2 id="5，语雀云笔记"><a href="#5，语雀云笔记" class="headerlink" title="5，语雀云笔记"></a>5，语雀云笔记</h2><pre><code>在此首先说明onenote的情况，在最开始用的是win自带的记事本，不常保存，经常是记下但是最后忘了存在哪，后来使用**OneNote**，功能真的很强大，加上fixed和reminder这些插件，用起来会方便很多，**but！！！太卡了！！！**OneNote的同步功能需要登录microsoft账户，记得也是需要科学上网，每次启动因为同步和登账户都要卡那么几分钟，所以**OneNote用起来就感觉很笨重**。&lt;br /&gt;      现在国内也有好几款云笔记或者软件，用来记笔记的，有的需要收费，有的是有限制，综合考虑，选择[语雀](https://www.yuque.com/)，云平台，打开浏览器窗口放着，需要的时候就记一下，不用就开着一个浏览器窗口，占的内存相对小太多了有木有！&lt;br /&gt;**支持markdown格式导入，插入图片，能直接创建思维导图，还能插入视频！写博客也方便了，在语雀上写完直接复制出去就能用，图床也省了。**你们有的功能我都有，我还是云存储，不占内存，某note还怎么比？？从某note果断转语雀。</code></pre><ul><li>划线还未使用，知乎好评：</li></ul><p><del>cclearner清理</del><br /><del>spacesniffer释放内存</del><br /><del>天若OCR识字</del><br /><del>思维导图：xmind 用语雀代替</del></p><ul><li>如果使用的是onenote，附上两个插件，但是真心不如云笔记：</li></ul><p>fixone修复，每次打开时方便<br />reminder闹钟提醒，弹窗</p><ul><li>微软输入法，右侧带表情包</li></ul><p><del>onedrive网盘功能，可生成分享链接，</del>太卡遂弃</p><ul><li><strong>edge浏览器，阅读标注PDF</strong></li></ul><p>这个功能是最近才发现的，edge浏览器一般不用，都用谷歌，阅读器用的福昕，发现这个功能后福昕也卸了。<br>注：如果网盘文件不能用了，进我博客就有联系方式了<del>见个人主页</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a name=&quot;KHtet&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;（一）学计算机必备&quot;&gt;&lt;a href=&quot;#（一）学计算机必备&quot; class=&quot;headerlink&quot; title=&quot;（一）学计算机必备&quot;&gt;&lt;/a&gt;（一）学计算机必备&lt;/h1&gt;&lt;p&gt;先占，待更&lt;br /&gt;12月
      
    
    </summary>
    
      <category term="Demo" scheme="https://hezhaoxiang.work/categories/Demo/"/>
    
      <category term="小技巧" scheme="https://hezhaoxiang.work/categories/Demo/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="电脑技巧" scheme="https://hezhaoxiang.work/tags/%E7%94%B5%E8%84%91%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>vue-router深入学习</title>
    <link href="https://hezhaoxiang.work/2019/learn-vue-router/"/>
    <id>https://hezhaoxiang.work/2019/learn-vue-router/</id>
    <published>2019-12-17T13:00:00.000Z</published>
    <updated>2019-12-17T13:36:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>#一、router路由发展的几个阶段<br>##1、后端路由阶段<br>后端渲染：前端只有html和css，后端通过jsp等技术渲染页面，再交给前端。<br>后端路由：后端处理url和页面映射之间的关系。后端通过正则匹配url，controller控制器来处理匹配的页面，把html返回给前端。</p><p>##2、前后端分离阶段</p><p>后端负责数据，<br>前端渲染：网页中的内容大部分是由前端写的js在浏览器中执行，后端负责提供API和数据</p><p>##3、前端路由阶段（SPA单页面富应用阶段）<br>整个网页只有一个html页面（包含html+css+js），当用户点击时，从url1–&gt;url2，通过前端路由，加载url2的内容（在vue中就是加载一个组件。）<br>改变url页面不整体刷新，两种实现方式：</p><ul><li>（1）改变url的hash，location.hash=’aaa’</li><li>（2）html5中的history模式pushState,history.pushState({},’’,’home’)三个参数为data title url。<br>history.pushState入栈<br>history.go(-1)=history.back()出栈<br>history.forward()=history.go(1)<br>#二、基础知识0<br>##1、懒加载<br>build打包时，appxxx.js文件变得很大，使用懒加载更高效。<br>router懒加载：用到的时候再加载。把不同路由对应的组件分割成不同的块，路由被访问时才加载对应组件，这样更高效。</li></ul><p>##2、嵌套路由<br>（1）创建子组件children，路由映射中配置<br>（2）在组件内使用<router-view><br>##3、传递参数params和query<br>params:是路由的一部分，一般params后接userid或name，展示:$router.params.userid<br>query:查询，即拼接在url后面的内容，url统一资源定位符格式：<br><code>协议：//主机名:端口号（默认80，即不显示）/路径?query#fragment片段</code><br>通过<code></code>查询<br><code>&lt;router-link :to=&quot;{path: &#39;/profile&#39;, query:{name:&#39;zx&#39;,age:&#39;25&#39;}}&quot; tag=&quot;button&quot;&gt;档案&lt;/router-link&gt;</code><br>对应url中的内容发生变化<br>#三、router基础1</p><h2 id="1-router和route区别"><a href="#1-router和route区别" class="headerlink" title="1.router和route区别"></a>1.router和route区别</h2><ul><li>router是vue中本身创建的class，ctrl加点击可跳转到类中。</li></ul><p>所有的组件都继承自Vue的原型。在main.js中定义的方法全局可用。<br />$router为VueRouter实例，想要导航到不同URL，则使用$router.push方法</p><ul><li>route仅为当前活跃的跳转所用。</li></ul><p>$route为当前router跳转对象里面可以获取name、path、query、params等<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1576556714624-d4fd2aeb-7b89-4157-9c2e-74dd4f71c0b1.png#align=left&display=inline&height=205&name=image.png&originHeight=410&originWidth=1108&size=172150&status=done&style=none&width=554" alt="image.png"></p><p><a name="dDLt0"></a></p><h2 id="2-导航守卫"><a href="#2-导航守卫" class="headerlink" title="2.导航守卫"></a>2.导航守卫</h2><p>在不同页面之间跳转时，title不变，使用导航守卫来监听跳转动作，实现title变化<br /><code>router.beforeEach（{</code><br /><code>window.document.title= to.meta.title //在钩子（routes）中定义标题，meta：title</code><br /><code>next() //next需要包含，它是一个函数，跳转到route</code><br /><code>}）</code><br />beforeEach是守卫（guard）函数，有to,from,next三个参数。<br />afterEach（后置钩子函数，不用next）<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/676682/1576562330137-5425d62f-70bf-4fae-ae78-cd5ed0f80edf.png#align=left&display=inline&height=387&name=image.png&originHeight=387&originWidth=961&size=54471&status=done&style=none&width=961" alt="image.png"></p><ul><li>全局守卫：beforeEach和afterEach</li><li>路由独享守卫：配置在router中</li></ul><p><code>beforeEnter：（to,from,next）=&gt;{</code><br />next()<br /><code>}</code></p><ul><li><p>组件内部守卫：beforeRouteEnter(不能获取实例中的this), beforeRouteUpdate(),beforeRouteLeave。<br><a name="2T03R"></a></p><h2 id="3-keep-alive"><a href="#3-keep-alive" class="headerlink" title="3. keep-alive"></a>3. keep-alive</h2><p>是vue的内置组件。<br />在使用keep-alive之前，每次从首页跳转到关于，组件都会被销毁，再点首页，又重新创建（生命周期）。为了不这样多次创建销毁，使用keep-alive：</p></li><li><input disabled="" type="checkbox"> <p><code>&lt;``kee-alive exclue=&quot;profile,about&quot;&gt; //profile组件会被从创建销毁，没有保持alive,profile和alive之间不能加空格</code></p></li><li><input disabled="" type="checkbox"> <p><code>&lt;router-view/&gt;</code></p></li><li><input disabled="" type="checkbox"> <p><code>&lt;/lkeep-alive&gt;</code></p></li></ul><p>activated和deactivated只有在使用keep-alive时才有效。<br><a name="2T7aJ"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#一、router路由发展的几个阶段&lt;br&gt;##1、后端路由阶段&lt;br&gt;后端渲染：前端只有html和css，后端通过jsp等技术渲染页面，再交给前端。&lt;br&gt;后端路由：后端处理url和页面映射之间的关系。后端通过正则匹配url，controller控制器来处理匹配的页面，把
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Vue学习" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Vue-router" scheme="https://hezhaoxiang.work/tags/Vue-router/"/>
    
  </entry>
  
  <entry>
    <title>教你半小时搭建博客网站-HEXO-hueman主题个人定制</title>
    <link href="https://hezhaoxiang.work/2019/hexo-hueman/"/>
    <id>https://hezhaoxiang.work/2019/hexo-hueman/</id>
    <published>2019-12-11T01:00:00.000Z</published>
    <updated>2020-04-01T18:23:30.239Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ftp.bmp.ovh/imgs/2019/12/be131417362eeba2.png" alt=""><br>没错，半小时入门，能搭起来网站，然后后期修改等一共预计整体耗时2-5天。<br>采用HEXO搭建个人博客，配合其中的hueman主题，根据个人需要进行修改，整体都托管在github上。在万网申请一个域名，来解析对应的github，就可以访问啦~</p><h2 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h2><p>一、申请github账号，本机电脑安装git，node.js<br>二、通过hexo创建博客网站<br>三、下载hexo中的hueman主题<br>四、hueman主题基本修改+域名解析<br>五、开始写第一个博客<br>六、博客menu菜单栏、侧边展开定制<br>七、字数统计、访问量统计、评论系统 百度和谷歌收录SEO</p><h2 id="一、申请github账号，本机电脑安装git-bash，node-js"><a href="#一、申请github账号，本机电脑安装git-bash，node-js" class="headerlink" title="一、申请github账号，本机电脑安装git.bash，node.js"></a>一、申请github账号，本机电脑安装git.bash，node.js</h2><p> 1、github申请，注册等等不再赘述，有github账户后，创建一个仓库repository,仓库名必须和你的github用户名一致，操作如下图。<br> repository的作用是，将你的hexo博客部署在github上，由github托管你的博客载体，后期维护只需要添加内容即可，不需要另外申请服务器来存你的博客。</p><p> <img src="https://ftp.bmp.ovh/imgs/2019/12/4683584a43a4c460.png" alt=""><br> 在本机（windows）安装git.bash和node：官网下载安装包，并添加到系统变量（如果在此之前你有类似webstorm或VS这样的编辑器，应该有node环境）。</p><h2 id="二、通过hexo创建博客"><a href="#二、通过hexo创建博客" class="headerlink" title="二、通过hexo创建博客"></a>二、通过hexo创建博客</h2><p><strong>安装hexo</strong><br>hexo是一款开源的博客系统，也是一个制作博客的工具。开源是因为hexo源码可见，你可以随自己的想法来定制修改，另一方面hexo现在集成度很好，很多功能都已经兼容，而且有上百种主题（hueman主题就是其中之一，功能最丰富的就是NexT主题）。<br>自己先创建一个文件夹，该文件夹用来存hexo和以后你的博客，在cmd或者Git中进入到你的文件夹，执行：<br><code>npm install -g hexo</code><br>通过npm安装并生成（generate）hexo，初始化<code>hexo init</code>再通过以下命令即可在浏览器中打开博客：<br><code>hexo c</code>（或者全写 hexo clean，先对hexo清理）<br><code>hexo g</code>（或者全写hexo generater，生成hexo网站，相当于平时所用的build或debug）<br><code>hexo s</code>（即hexo serve，开启服务）<br>此时在浏览器中输入localhost:4000 即可查看。<br>当你在浏览器里看到网站时，不要悲伤不要心急，忧虑的日子总会过去，因为到这里我们已经完成了<a href="">第0步</a>，如果加上安装node那些，这里已经由半小时了吧哈哈哈。后面还要，，，放张图，你懂我的意思吧<br><img src="https://ftp.bmp.ovh/imgs/2019/12/4e11bd63097f8001.jpg" alt=""><br>##三、下载hexo中的hueman主题<br><strong>博客换成hueman主题</strong><br>hueman主题是hexo上百种主题的一种，可以挑你喜欢的风格，不同风格对应的功能也不一样，很多要后期自己配置，此处放<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo各种主题</a>备选<br>很多博主都选用了NexT主题，功能很强大，不过风格我不大喜欢，看到一位小姐姐<a href="http://visugar.com/2017/05/04/20170504SetUpHexoBlog/" target="_blank" rel="noopener">visugar</a>和一位<a href="http://fangzh.top/2018/2018090514/" target="_blank" rel="noopener">帅小哥</a>的博客时眼前一亮，简单清晰，想找的内容第一眼就能看到，就它hueman了！<br>在你创建的文件夹（即根目录）下，从hexo的github上git下载hueman主题，以下指令会自动下载到你的themes文件夹中，注意别整错位置了。<br><code>git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman</code><br>在根目录下的_config.yml文件中修改theme，默认是landscape，就是你第一次打开的主题。修改为：<br><code>theme: hueman</code><br>修改完，浏览器里就直接变了？？年轻！先保存，然后：<br><code>hexo c</code><br><code>hexo g</code><br><code>hexo s</code><br>再次刷新浏览器，才能看到新主题。是的，现在我们完成了<a href="">第1步</a>。</p><h2 id="四、hueman主题基本修改-域名解析"><a href="#四、hueman主题基本修改-域名解析" class="headerlink" title="四、hueman主题基本修改+域名解析"></a>四、hueman主题基本修改+域名解析</h2><p><strong>1、hueman修改logo、副标题和网站icon等</strong></p><ul><li>logo：对应那个“hueman”图片，图片位置\myblog（根目录，你创建的那个）\themes\hueman\source\css\images\logo-header.png 替换文件名</li><li>副标题（subtitle）: Do what u love,  love what u do：\myblog_config.yml 在config文件中找到相应位置，添加内容，另外<a href="">注意：冒号后面有一个空格，否则会报错</a></li><li>网站icon： 打开网址时浏览器标题栏里的小图标\themes\hueman\source\css\images，icon文件添加到这个文件夹中，并在hueman的config文件中找到这一行<code>favicon: css/images/favicon.ico # path to favicon</code>，附两个生成icon的网址，很好用:<a href="http://www.bitbug.net/" target="_blank" rel="noopener">生成icon</a>和<a href="https://fontawesome.com/start" target="_blank" rel="noopener">icon库</a></li><li>title：打开网址时浏览器标题栏里的内容 \myblog_config.yml，就在开头很好找。</li></ul><p><strong>域名解析</strong><br>这里就要用到最开始说的那一步了–github，截至目前，你的网站已经可以在本地运行，并且作了基本修改，那么下一个就是把这个网站放到网上，别人可以通过浏览器上网访问你的博客。<br><strong>[原理图]</strong>是这样的： （1）别人在浏览器里输入网址(域名，需要购买，1块钱！！)–&gt;（2）浏览器解析这个域名对应到服务器A处–&gt;（3）A服务器将存好的页面展示出来，OK √<br>现在（3）中的页面内容已经有了初始化,本地服务器hexo也有了，但是不能联网，所以将hexo托管到github，由github充当服务器A的角色，在域名中解析你的github的ip地址。<br>现在要做的事：(a)github创建仓库4o4NotFoundd.github.io（见一，用你自己的github用户名）–&gt;(b)本地hexo部署到github–&gt;(c)购买域名,添加解析–&gt;(d)调试结果</p><ul><li><p>（a）创建仓库,ssh验证<br>在本地git.bash中：<br><code>git config --global user.name &quot;你的用户名，我的是4o4NotFoundd&quot;</code><br><code>git config --global user.email &quot;注册时使用的邮箱&quot;</code><br>生成ssh（ssh是一种通信方式，让你的本地git和github正常通信，能上传到github）<br><code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>这一步会在你的电脑上生成一个带“pub”字样的公钥和一个私钥，把公钥复制添加到你仓库（Setting那里）的ssh key中。<br>验证：<code>ssh -T git@github.com</code></p></li><li><p>（b）本地hexo部署到github<br>根目录下的congfig文件中加上：<br><code>deploy:type: gitrepo: git@github.com:4o4NotFoundd/4o4NotFoundd.github.io.gitbranch: master#使用git@方式，每次从hexo向github部署的时候不用重复输入密码</code><br>[注意：]一定要使用git@，别用http协议的，不然每次部署时输入username和password能气死，来自http用户的血泪教训。<br>config配置完了，记得操作：<br><code>hexo c</code> 清理<br><code>hexo g</code> 如果有报错，修改后继续hexo c, hexo g<br><code>hexo d</code>此处使用hexo deploy(部署，提交到github) </p></li><li><p>（c）购买域名,在域名中添加解析<br>到（b）这里，在浏览器里输入<code>https://你的用户名.github.io</code>已经可以看到网站了，但是，这个网址不大好看啊，自己申请一个简单好记的域名岂不美滋滋？<br>于是，在<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">万网</a>找到”域名优惠”字样，发现了新大陆，一块钱域名，不亏了吧，其他9元，19都有，看个人。<br><img src="https://ftp.bmp.ovh/imgs/2019/12/877e5ab5b74ef65f.png" alt=""><br>进入到控制台，添加解析如下：<br><img src="https://ftp.bmp.ovh/imgs/2019/12/02a773446b828db4.png" alt=""><br>红圈里的是github的解析，上面两个是添加到百度站点（添加之后百度就会爬你的网页，别人搜东西就会把你的推荐给人家，不然别人一直看不到你的博客，具体搜SEO）<br>github的记录值哪来的？ 在你的本机<code>ping https://4o4NotFoundd.github.io</code> 就出来了，这个ip就是“服务器A”的ip。<br>对了，在购买域名的时候还有身份认证，有一个快捷的方法，用淘宝或支付宝这样的认证很快，不然你得几个工作日。</p></li><li><p>（d）不出意外，当你在浏览器里输入域名，就能看到你的网站了！！！开不开心？？这是<a href="">第2步</a>!!!</p></li></ul><h2 id="五、开始写第一个博客"><a href="#五、开始写第一个博客" class="headerlink" title="五、开始写第一个博客"></a>五、开始写第一个博客</h2><p>两种方法：hexo-admin 和 自选编辑器（我用的webstorm，sublime text3也可以）,两种都是编辑markdown（.md）格式的文档。<br>（1）hexo-admin使用过程：<br><code>npm install --save hexo-admin</code><br><code>hexo s</code><br>在浏览器里输入<code>localhost:4000/admin</code>进入到编辑页面，对新手友好一些。<br>（2）自己用编辑器写（推荐）<br>主要是写.md文件，hexo会把.md文件转成html页面，博主只需要关注内容就好，不用太关心页面布局。<br>在/myblog/source/_posts文件夹下的md文件会最终展示在博客上，，所以可以直接在里面新建filename.md文件来测试，格式如下<br> <code>title: Vue.js之vuex入门</code><br> <code>author: He Zhaoxiang</code><br> <code>id: learn-vuex</code><br> <code>tags:</code><br> <code>- Vuex</code><br> <code>categories:</code><br> <code>- web前端</code><br> <code>- Vue学习</code><br> <code>date: 2019-12-04 19:11:30</code><br> <code>---</code><br> <code>虚线一下是正文</code><br> <code>![](https://图片链接.png)</code></p><p> <code>## 一、这是一级目录</code></p><ul><li>id是在链接里展示的内容</li><li>tags是文章的标签，在侧边栏能展示</li><li>categories 是menu菜单栏，分别是一级菜单“web前端”，二级下拉菜单“vue学习”</li><li>插入图片的格式就是上面那样，试一次就知道了。<br>最后，hexo c， heox g -d部署到github，就成了~ 哈哈哈<a href="">第3步get~</a></li></ul><p>有了以上三步，完全可以写博客了，那为什么还有下面4,5,6。。。步呢，当然是做的更好啦~<br>##六、博客menu菜单栏、侧边展开定制<br>1、menu菜单栏增加内容<br>最方便的方式是通过category添加，在写.md的时候就自己确定了在哪个分类下，比较方便。所以，用好上面我给的模板，剩下的就是你自己的内容了。<br>在category中不同一级菜单的顺序，是按字母和拼音的先后来的，不是依次向右排，也没有自己定制位置的方法，所以最好先自己规划好一级分类。<br>侧边栏在hueman的config文件中是widgets，展示的内容自己选吧，相应的汉语意思在/hueman/languages/zh-CN.yml中<br>这里是我设置情况：<br><img src="https://ftp.bmp.ovh/imgs/2019/12/721e2ee8d6811125.png" alt=""><br><img src="https://ftp.bmp.ovh/imgs/2019/12/ac554663f17546cb.png" alt=""><br>##七、字数统计、访问量统计、评论系统 百度和谷歌收录SEO<br><strong>1、字数统计</strong><br>在根目录下安装hexo-wordcount：<br><code>npm install --save hexo-wordcount</code><br>config中counter选择true，没错，就是这么简单，但是自己捣鼓就很费时间，多数博客都是基于NexT主题改的，hueman主题的博客比较少。<br><strong>2、访问量统计</strong><br>使用<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>,参考这位<a href="http://fangzh.top/2018/2018090918/" target="_blank" rel="noopener">小哥</a>需要一提的是小哥给的代码失效了，进入不蒜子那里直接获得最新代码，就两行代码，引用一下不蒜子的js就可以。<br><strong>3、评论系统,百度收录SEO</strong><br>评论使用<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>，百度收录也是参照这位<a href="http://visugar.com/2017/08/01/20170801HexoPlugins/" target="_blank" rel="noopener">小姐姐</a>，需要“科学上网”，如果不能“科学上网（提示一下，现在蓝deng可以用，灯光的灯，github找找吧哈哈哈）”，那就得花些时间使用valine方法了。</p><p>到此，<a href="">第四步</a>finish！</p><p>后续可以改的东西还很多，有很大的可定制性，先到这里，有问题可以Email我或者留言，看到会及时回复滴~</p><p>欢迎经常来玩哦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://ftp.bmp.ovh/imgs/2019/12/be131417362eeba2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;没错，半小时入门，能搭起来网站，然后后期修改等一共预计整体耗时2-5天。&lt;br&gt;采用HEXO搭建个人博客，配合其中的hue
      
    
    </summary>
    
      <category term="Demo" scheme="https://hezhaoxiang.work/categories/Demo/"/>
    
      <category term="搭建博客" scheme="https://hezhaoxiang.work/categories/Demo/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Demo" scheme="https://hezhaoxiang.work/tags/Demo/"/>
    
      <category term="搭建博客" scheme="https://hezhaoxiang.work/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js之vuex入门</title>
    <link href="https://hezhaoxiang.work/2019/learn-vuex/"/>
    <id>https://hezhaoxiang.work/2019/learn-vuex/</id>
    <published>2019-12-04T11:11:30.000Z</published>
    <updated>2019-12-10T11:33:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>放图，这个图最能说明vuex和Vue之间的关系。<br><img src="https://img-blog.csdnimg.cn/20191204154825907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h2><p>虚线中的Vuex是用来处理vue的组件，vue compontents（组件）通过dispatch（理解为转发事件）交给action，通过接入后端api完成一些业务，在action中进行异步操作，再将结果以commit（提交事件）方式发给mutations。mutations中最终实现vue compontent的method。state用来存数据，交给组件在页面中显示。</p><p>devtools是vue为了适应浏览器的一个插件，在这个插件中可以看到vue响应的过程，包括每个对象，属性和value。<br><img src="https://img-blog.csdnimg.cn/20191204155831986.png" alt=""><br><img src="https://img-blog.csdnimg.cn/2019120416001188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="二、vuex组成"><a href="#二、vuex组成" class="headerlink" title="二、vuex组成"></a>二、vuex组成</h2><p>1、state<br>2、getter<br>3、mutations<br>4、actions<br>5、modules</p><p> <strong>1. state</strong></p><p> 相当于数据仓库，vuex中的数据放在store实例中，store对象包括 s以上5个部分。<br>store称为单一状态树：所有状态信息保存在一个store中，便于管理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">const store= new Vuex.Store(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  state:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    //counter 数据变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">//保存数据，在其他地方引用$store.state.counter</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  &#125;,&#125;</span></pre></td></tr></table></figure><p> <strong>2. getter</strong><br> 用来获取数据，类似computed计算属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">getters:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    // adddd()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    // &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">//类似计算属性computed，使用时$store.getter.adddd&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">//filter过滤,s代表student数组中的一个，结果返回学生信息。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">this.$store.state.student.filter(s =&gt;&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        Return s.age&gt;<span class="number">20</span>&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">等价于：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">this.$store.student.filter(s=&gt; s.age&gt;=20) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">//前一个&gt;= 是过渡函数，filter格式，第二个&gt;=是判断条件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">more20(state)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    more20Length(state,getter)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      //调用getter中已有的函数getter.more20.length</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr></table></figure><p> <strong>3. mutations</strong><br> <strong>在mutations中，vue组件的method，commit给mutation，mutation来处理。</strong><br> 用来修改数据，包括两部分：事件类型type+回调函数；<br>回调函数的参数被称为mutation的负载payload。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">两种提交风格：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">this.$store.commit(“appmethodTomutation”,count)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">//此处事件类型appmethodTomutation，payload：count</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">//可以直接由vue.component--&gt;mutations，执行同步操作</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">//如果有异步操作，则需要vue.component--&gt;actions--&gt;mutations</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">this.$store.commit(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">type:” appmethodTomutation”,   count   &#125;)</span></pre></td></tr></table></figure><ul><li>响应式原理：界面刷新，state中的属性值跟着刷新。如果初始没有该属性，则不跟随响应。</li><li>添加属性:并跟随响应的方法push，pop，Vue.set（state.info,‘address’,’shandong’）</li><li>删除属性：Vue.delete(state.info,’age’)</li><li>Miutation常量：将方法定义为常量，commit时写常量。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">//常量：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">this.$store.commit(INCERES)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">//在mutation中 使用</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[INCRESE]&#123;方法  &#125;   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">//还需要在mutation.js中单独定义</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> export const INCRESE=‘increse’</span></pre></td></tr></table></figure><p> <strong>4.actions</strong><br> vue的method dispatch给action，actions 中commit 给 mutations，最终在mutation中解决。<br> action执行异步操作：<br> （如setTimeout（（）=&gt;{ state.info.name=’xlkhj’  }, 1000），在mutation中都是同步操作。<br>Context上下文，相当于store</p><p><img src="https://img-blog.csdnimg.cn/20191204185637387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20191204185658484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""><br><strong>5. modules</strong><br>   store内容过多时可使用，将store的功能模块化，每个模块中又可以有state等。从module中的action取store中的值context.rootGetters。</p><h2 id="三、在vue中使用vuex"><a href="#三、在vue中使用vuex" class="headerlink" title="三、在vue中使用vuex"></a>三、在vue中使用vuex</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Vue.use(Vuex)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">//<span class="number">1</span>、安装插件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">//<span class="number">2</span>、创建store对象</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">const store= new Vuex.Store</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">// <span class="number">3</span>、导出store对象：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">export default store</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;放图，这个图最能说明vuex和Vue之间的关系。&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20191204154825907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naG
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Vue学习" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Vuex" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/Vuex/"/>
    
    
      <category term="Vuex" scheme="https://hezhaoxiang.work/tags/Vuex/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js小Demo--todoList待办事项清单</title>
    <link href="https://hezhaoxiang.work/2019/learn-vue-todoList/"/>
    <id>https://hezhaoxiang.work/2019/learn-vue-todoList/</id>
    <published>2019-11-29T13:38:00.000Z</published>
    <updated>2019-12-10T12:34:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue实现todolist整体思路："><a href="#Vue实现todolist整体思路：" class="headerlink" title="Vue实现todolist整体思路："></a>Vue实现todolist整体思路：</h2><p>1、创建vue项目（不包括router，不使用eslint检查语法）<br>2、修改为空白项目，去掉helloworld等<br>3、构思整体框架，创建一个DOM（标题appheader，输入栏input、展示列表list）通过css渲染<br>4、依次完成各个组件AppHeader、todoInput、todoItem，最后由APP.vue组合展示。<br>组件化思想是Vue的核心思想，将各个功能模块组件化，有利于在页面中引用。在每次刷新网页时，Vue的页面也是根据组件刷新，而不必刷新整个页面，提高了运行效率，节约网络资源。<br><img src="https://img-blog.csdnimg.cn/20191129104133441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="一、标题部分–Appheader-vue"><a href="#一、标题部分–Appheader-vue" class="headerlink" title="一、标题部分–Appheader.vue"></a>一、标题部分–Appheader.vue</h2><p>每个vue组件都包含template、script和css的style样式，后两者可缺省或外部引用。script中的name将作为组件名在APP.vue中引用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;div id=<span class="string">"title"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        &lt;h1&gt;番茄工作法todoList&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;/template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    export default &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        name: <span class="string">"AppHeader"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#title&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    color: burlywood;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&lt;/style&gt;</span></pre></td></tr></table></figure><p>app.vue引用情况（部分app.vue，最后给出整个app.vue）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">template中：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;AppHeader&gt;&lt;/AppHeader&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">script中：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AppHeader <span class="keyword">from</span> <span class="string">"./components/Appheader.vue"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">export defalt&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">name:<span class="string">"APP"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">compponents:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">AppHeader,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">//<span class="number">1</span>、注意区分vue的文件名（Appheader）和组件名（AppHeader），在引用时：<span class="keyword">import</span> 组件 <span class="keyword">from</span> 文件；默认情况下二者一样，自己修改时应注意。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">//<span class="number">2</span>、在components（组件）中要引用AppHeader组件，否组无法使用；</span></pre></td></tr></table></figure><h2 id="二、输入框–todoInput-vue"><a href="#二、输入框–todoInput-vue" class="headerlink" title="二、输入框–todoInput.vue"></a>二、输入框–todoInput.vue</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;div id=<span class="string">"input"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        &lt;input id=<span class="string">"inputtext"</span> type=<span class="string">"text"</span> v-model=<span class="string">"text"</span> v-on:keyup.enter=<span class="string">"addTodo"</span> placeholder=<span class="string">"输入事项，回车确定"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    //监听enter，执行addTodo方法，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&lt;/template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    export default &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        name: <span class="string">"TodoInput"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        data()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                text:<span class="string">""</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        methods:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            addTodo()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                this.$emit(<span class="string">"add-event"</span>,this.text);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                //子组件上的点击事件成功后，通过 $emit 将事件add-event和数据text发送，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                //发送到add-event对应的method，在父组件APP.vue中对应add-event的方法是addTodo123，执行添加数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">                this.text=<span class="string">""</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#inputtext&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    outline:none;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    /*box-shadow: none;*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    border: none;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    border-bottom: <span class="number">2</span>px solid lightskyblue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    border-top: <span class="number">2</span>px solid lightskyblue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    width: <span class="number">400</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    line-height: <span class="number">30</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    margin:<span class="number">20</span>px auto <span class="number">20</span>px auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    padding: <span class="number">5</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&lt;/style&gt;</span></pre></td></tr></table></figure><h2 id="三、显示增加的事项，删除事项–todoItem-vue"><a href="#三、显示增加的事项，删除事项–todoItem-vue" class="headerlink" title="三、显示增加的事项，删除事项–todoItem.vue"></a>三、显示增加的事项，删除事项–todoItem.vue</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;div id=<span class="string">"list"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        &lt;button id="del-btn" v-on:click="removeTodo"&gt;删除&lt;/button&gt;&#123;&#123;x.text&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        //点击button，执行removeTodo</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&lt;/template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    export default &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        name: <span class="string">"TodoItem"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        props:[<span class="string">"x"</span>],//props属性，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        methods:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            removeTodo()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                this.$emit(<span class="string">"remove-event"</span>,this.x.id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                //子组件执行removeTodo，通过emit发送remove-event事件和id给父组件app</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                //在父组件中根据remove-event执行removeTodo321方法</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#list&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    /*float: left;*/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    width: <span class="number">400</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    margin: <span class="number">10</span>px auto <span class="number">10</span>px auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    padding-right: <span class="number">10</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    border-bottom: <span class="number">1</span>px solid lightgray;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    text-align: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    line-height: <span class="number">30</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    font-weight: bold;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#del-btn&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    border: <span class="number">2</span>px solid grey;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    line-height: <span class="number">18</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    background-color: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    color: red;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    margin-right: <span class="number">10</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">&lt;/style&gt;</span></pre></td></tr></table></figure><h2 id="四、完整父组件APP-vue"><a href="#四、完整父组件APP-vue" class="headerlink" title="四、完整父组件APP.vue"></a>四、完整父组件APP.vue</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;div id=<span class="string">"todo-wrapper"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      &lt;AaappHeader&gt;&lt;/AaappHeader&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      &lt;TodoInput v-on:add-event="addTodo123"&gt;&lt;/TodoInput&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      &lt;TodoItem v-for="x in todos" v-on:remove-event="removeTodo321" v-bind:x="x" :key="x.id"&gt;&lt;/TodoItem&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      //v-<span class="keyword">for</span>循环，展示现在data中的事项，和key配合使用</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">      //v-bind绑定数据，在子组中要定义props属性</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  &lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;/template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AaappHeader <span class="keyword">from</span> <span class="string">"./components/Appheader.vue"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> TodoInput <span class="keyword">from</span> <span class="string">"./components/todoInput.vue"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> TodoItem <span class="keyword">from</span> <span class="string">"./components/todoItem.vue"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">export default &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  name: <span class="string">'app'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  components: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    AaappHeader,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    TodoInput,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    TodoItem</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  data()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">      todos:[</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">              &#123;id:<span class="number">0</span>, text:<span class="string">"事项0"</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">              &#123;id:<span class="number">1</span>, text:<span class="string">"事项1"</span>&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">      ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">      nextId:<span class="number">2</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">  methods:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    addTodo123(text)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">      this.todos.push(&#123;id:this.nextId,text:text&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">      this.nextId++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    removeTodo321(id)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">      this.todos=this.todos.filter(x=&gt;x.id!==id)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#app &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">  font-family: <span class="string">'Avenir'</span>, Helvetica, Arial, sans-serif;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">  -webkit-font-smoothing: antialiased;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">  -moz-osx-font-smoothing: grayscale;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">  text-align: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">  color: <span class="comment">#2c3e50;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">  margin-top: <span class="number">60</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#todo-wrapper&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">  width: <span class="number">600</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">  min-height: <span class="number">600</span>px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">  margin: <span class="number">100</span>px auto <span class="number">100</span>px auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">  border: <span class="number">3</span>px solid lightskyblue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&lt;/style&gt;</span></pre></td></tr></table></figure><p>注：学习链接，b站上的一个外国小哥写的demo，全程飚英文，跟着敲，然后自己修改。侵删。<br>代码放在github上（下载可直接用）：<br><a href="https://github.com/4o4NotFoundd/Vue/tree/master/todoList" target="_blank" rel="noopener">https://github.com/4o4NotFoundd/Vue/tree/master/todoList</a><br>            <a href="https://github.com/4o4NotFoundd/Vue/tree/master/todoList" target="_blank" rel="noopener">todoList</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Vue实现todolist整体思路：&quot;&gt;&lt;a href=&quot;#Vue实现todolist整体思路：&quot; class=&quot;headerlink&quot; title=&quot;Vue实现todolist整体思路：&quot;&gt;&lt;/a&gt;Vue实现todolist整体思路：&lt;/h2&gt;&lt;p&gt;1、创建vu
      
    
    </summary>
    
      <category term="Demo" scheme="https://hezhaoxiang.work/categories/Demo/"/>
    
      <category term="todoList" scheme="https://hezhaoxiang.work/categories/Demo/todoList/"/>
    
    
      <category term="Vue" scheme="https://hezhaoxiang.work/tags/Vue/"/>
    
      <category term="Demo" scheme="https://hezhaoxiang.work/tags/Demo/"/>
    
  </entry>
  
  <entry>
    <title>2019年“华为杯”研究生数学建模竞赛--E题（全球变暖）思路&amp;感想</title>
    <link href="https://hezhaoxiang.work/2019/huawei-jianmo/"/>
    <id>https://hezhaoxiang.work/2019/huawei-jianmo/</id>
    <published>2019-11-13T06:53:00.000Z</published>
    <updated>2019-12-10T11:46:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>11月11日，公布成绩得了二等，欣喜若狂，毕竟三个人建模经历并不丰富。在此，首先感谢两位厉害的小姐姐一起交流、合作、查资料、编程、统计作图、合作分工、熬夜，才最后完成了论文。不论最后的结果如何，每个人的付出都是大于三分之一的。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>一、研一参加数模情况<br>二、研二开始前的准备<br>三、比赛过程（周四~周一上午，四天四夜）<br>四、注意事项</p><h2 id="一、研一参加数模情况"><a href="#一、研一参加数模情况" class="headerlink" title="一、研一参加数模情况"></a>一、研一参加数模情况</h2><p> <strong>研一刚开学的时候</strong>，导员在年级大会上就说起了“华为杯”研究生数学建模，现在对这项比赛比较认可吧，一般当成研究生数学建模的国赛。本科期间对数学建模了解的并不是很多，没有系统的学习过各种模型，参加过一次美赛，无果。研一当时作为队长找了一位室友和一位经济类专业的小姐姐，在开赛前的前一周，我们一起练了两套题，交流了方法，室友（编程大佬）实现了部分内容，当时主要练了飞行轨迹最优化、遗传相关这两个方面，准备比赛时从这两方面入手。</p><p><strong>正式比赛时</strong>，在第一天的上午我们就确定了要做E题–“多无人机对组网雷达的协同干扰”，随着理解一点点深入，发现E题看似入门容易，但是做起来并不简单，不过已经过去一两天，改题目也来不及了，就硬着头皮做下去。当时前三天都是在图书馆里，早上八点到，晚上十点回，中午不睡也无困意，毕竟思路像一条条绳索把自己的全身缚住，动弹不得。最后，我们把问题简化，忽略了很多干扰因素，以最简单的方式解决。</p><p><strong>最后一天的夜里</strong>，我们转战学校提供的教室，三人通宵赶论文。解决方式简化，导致论文里的内容也少，写到最后没有太多东西可写。不过还是尽可能加一些图表，丰富一下内容。在夜里十二点半左右，点了外卖，吃完接着干。大概在夜里三四点，觉得整体内容基本完成，在早上六点多，提交了论文的<strong>MD5码（重要，后面着重说明）</strong>，踏着清晨的曙光，奔向食堂，吃了早饭就回宿舍躺着了。</p><p><strong>最后结果</strong>并不理想，只能说自己经验和知识储备不足吧。室友和那个小姐姐都很认真的准备，作为队长没有给队员一个好结果，也挺遗憾的。</p><h2 id="二、研二开始前的准备"><a href="#二、研二开始前的准备" class="headerlink" title="二、研二开始前的准备"></a>二、研二开始前的准备</h2><p><strong>1、阅读优秀论文</strong><br>自己看一遍往年的建模题目，自己思考，然后去读优秀论文真的挺重要。每个类型的题目看四五篇左右，看论文里的建模方法就去查，关于这个方法的思路，如何实现。这样再看到一个新的题目自己也就有想法了。<br>特别是对同一个题目，看几篇论文，他们用了不同的方法实现，其实也说明了建模的开放性，自己在做题的时候思路要开阔。<br>优秀论文去官网上找吧，资源还是挺多的。</p><p><strong>2、三人交流</strong><br>不可否认，三个人之间的交流、合作真的很重要。这次队长是一位小姐姐W，另一位队友小姐姐J。队长W和我主要负责建模和编程，小姐姐J主要负责写论文，作统计图表，查资料、提供思路和修正我们的思路。</p><p><strong>3、开始的前一天–2019年9月18号周三</strong><br>去超市买了饼干，面包，咖啡备用，准备好论文模板和几篇格式较好的论文，参照他们的格式来写。我们三人在同一个专业，这几天都在实验室进行，队友J和老板请了假，我实验室在队长W隔壁，就趁着老板不在悄悄过去。</p><h2 id="三、比赛过程（周四-周一上午，四天四夜）"><a href="#三、比赛过程（周四-周一上午，四天四夜）" class="headerlink" title="三、比赛过程（周四~周一上午，四天四夜）"></a>三、比赛过程（周四~周一上午，四天四夜）</h2><p><strong>1、第一天：9月19号-周四</strong><br>第一天上午拿到题目，我们三人分开看题目，看完交流想法和难度，然后每个人把其他题目看一下，再决定选哪一道题。</p><ul><li>A题：无线智能传播模型</li><li>B题：天文导航中的星图识别</li><li>C题： 视觉情报信息分析</li><li>D题：汽车行驶工况构建</li><li>E题：全球变暖？</li><li>F题：多约束条件下飞行器航迹快速规划</li></ul><p>A题华为题，前几年都是信号模型一类，今年有所变化，在信号这些理论基础上，改为深度学习，在华为云上跑深度模型，以分类那些为主，不适合我们三人，作罢。<br>B题看完整个人有点懵，各种运动把我们绕晕了，也没深入考虑，pass。<br>C题是cv方向，根据图像测车辆之间的实际距离，基本上是纯算法题，pass。<br>D题仔细读一读感觉不难，留作备选，在最后三人讨论中觉得E题更好写，答案更开放。<br>E题四小问都很开放，在中午饭前就决定选E。<br>F题也是规划相关，吸取去年经验没选，后来听室友说选了这题，做起来像是高中物理题，最后他们也得了国二。</p><p><strong>这是E题：</strong></p><ul><li>（1）你们能否从加拿大各地天气变化的历史数据中挖掘出该地区温度的时空变化趋势？<br>海洋表面温度历史数据中蕴含着什么样的规律？</li><li>（2）请你们建立一个刻画气候变化的模型对未来 25 年的气候变化进行预测，该模型<br>至少需要考虑地球的吸热、散热以及海洋的温度变化【7】 等要素。</li><li>（3）“极寒天气”是某地的天气现象，这种极端气象的出现，与气候变化有无关系？请建<br>立相应的模型，并利用题目所提供的数据以及你能收集的数据说明：全球变暖和局地极寒现象的出现之间是否矛盾？</li><li>（4）请用通俗易懂的文字解释：“全球变暖了，某地今年的冬天特别冷”之间的关系。 请<br>用一个新概念替代“全球变暖”，来反映气候变化的趋势和复杂性？并给予解释。</li></ul><p>第一天下午，所有的E题群里基本上都在问同一个问题，数据在哪里，到了晚上群里逐渐有人发网站链接，最后我们在加拿大的官网上找到了气象站的温度数据。气象站温度数据很多很多，而且年份不齐，有的还是缺省，我们就决定按照省份和方位来选点，并在气象站位置地图上标注。选点后下载数据，十点余回宿舍。</p><p><strong>2、第二天：9月20号-周五</strong><br><strong>上午，</strong>在知网上搜了几篇论文看他们是对温度数据如何处理的，做了参考。然后对温度数据选择，筛选，统计，作图。（1）的前一小问基本完成，论文未写。跟着第一天的思路来找，在各种网站之间来回穿梭，也找到了一个统计全球海洋表面温度的网站，队友J对这个网站的数据结果做了整理，中午她开始写（1）问的论文，队长W编程来统计，我开始看第二问。<br><strong>下午和晚上，</strong>我先找到了几篇内容贴切的论文，准备改用他们的方法，队长W在github上找到了类似的代码，不过调试还有问题，跑不通，最终作罢。<br>时间过的很快，查资料，交流方法，不知不觉间就到了晚上，今天大家交流明显变少，查资料的效率也高很多，在第一天的时候三个人思想碰撞最为热烈，思路一旦敲定，大家就分工各自完成自己的部分。</p><p><strong>3、第三天：9月21号-周六</strong><br>周六<strong>一早上</strong>开始有些焦灼，（2）问还没完成，还有（3）（4）问。我就主要负责（2）问，开始写（2）的论文，队长W开始看（3）问，队友J把（1）问完善的差不多了。<br><strong>下午</strong>，根据论文和博客上的方法，我对SDSM（统计降尺度模型）进行改进，对常见的气候模型做了统计和整合，并对RCP（气体浓度路径 ，当时记得贼6，脑子里全是这几个词，现在都忘了哈哈哈）建立子模型。<br><strong>晚上通宵</strong>，在周日凌晨三点左右把（2）问写完了，然后跟着队长看（3）问。两位队友小姐姐很拼，硬是通宵一点儿没睡，我四点多开始睡了两个小时。</p><p><strong>4、第四天：9月22号-周日</strong><br>七点左右，我去买了早餐。饭后，关于（3）问我和队长有了分歧，队友J和我想法相似，不过我俩都没能说服队长，最后队长一人完成（3），我和队友J继续做（4）。<br>（4）问是开放性的，开始是队友J在写，然后我作修改。（4）的给全球变暖提一个新概念，队友J提出的“<strong>全球生态环境紊乱</strong>”我感觉挺好，气候变暖不仅仅是温度提高，对应的生态环境也发生变化，涉及到各个方面，具体表现形式可分为海平面上升、影响农业、臭氧层破坏、土地荒漠化以及大气污染与海洋污染等方面。<br>第四天晚上，（1）、（2）（4）问基本完成，剩下的时间就是继续修改、完善。（3）问队长持续fighting。</p><p><strong>5、第五天：9月23号-周一</strong><br>此处的周一是要从零点开始算了，这段时间显得格外宝贵。队长在凌晨五点左右完成（3），然后我们一起调格式，论文从头到尾看了几遍（论文修改三五遍都是很正常的，尽量美观），改改格式，加上参考文献、代码和数据。说实话，这个时候我们三个人都已经脑袋懵了，眼睛睁着但是脑袋转的很慢。<br>九点左右，队长提交了MD5码，她俩各自回宿舍了。交MD5码的那一刻，整个人真的有一种大石头落地的感觉，不管论文有多少不足之处，都不用再改，<strong>长舒一口气，能睡觉真好！！</strong><br>中午十二点多，提交了论文原文和数据压缩包，一切结束！</p><h2 id="四、注意事项"><a href="#四、注意事项" class="headerlink" title="四、注意事项"></a>四、注意事项</h2><p><strong>1、MD5码</strong><br>用软件生成MD5码之后，论文一定不要动，不要打开，不要重命名，路径最好也不要动。防止码和论文对应不上。我们学校每年都有因为MD5码问题没交上论文的情况。这是我们学校参加建模的情况，大佬还是多啊，作为菜鸡唯有佩服。<br><img src="https://img-blog.csdnimg.cn/20191113142801552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""><br><strong>2、三人之间交流合作</strong><br>交流，真的真的太重要了，三个人分好工，会节省很多时间，别人几句话可能就解决了你想一两个小时的问题。还有，交流的时候不要怕意见不合，说出来总比自己一个人闷头苦干的好。</p><p><strong>3、摘要&amp;格式</strong><br>摘要一定写的简洁干练，把你的思想方法和结果用几句话说出来，摘要里别说空话。我们是每个人写自己负责的那部分。如果仔细追究，其中不当之处可能很多，不过这也是我们三人在这四天四夜里展现最好的了。<br><img src="https://img-blog.csdnimg.cn/20191113143724346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt="">)<img src="https://img-blog.csdnimg.cn/20191113143750821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""><br><strong>4、建模</strong><br>宣讲会的时候老师讲：参加数学建模，95%的学生都不是数学专业的，<strong>重在思路</strong>，重在解决问题的方法（所以，不会建模不要紧，三个人一起查资料，想办法）。而评阅的老师，95%都是数学专业的（所以<strong>论文很重要</strong>，要写的完善，让人看起来舒服，我们都是尽量用流程图，图表代替大段的文字描述）。<br>最后，说两点最重要的吧——<strong>论文写好，三人合作</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;11月11日，公布成绩得了二等，欣喜若狂，毕竟三个人建模经历并不丰富。在此，首先感谢两位厉害的小姐姐一起交流、合作、查资料、编程、统计作图、合作分工、熬夜，才最后完成了论文。不论最后的结果如何，每个人的付出都是大于三分之一的。&lt;/p&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="竞赛" scheme="https://hezhaoxiang.work/categories/%E7%AB%9E%E8%B5%9B/"/>
    
      <category term="数学建模" scheme="https://hezhaoxiang.work/categories/%E7%AB%9E%E8%B5%9B/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
      <category term="数学建模" scheme="https://hezhaoxiang.work/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="2019研究生E题" scheme="https://hezhaoxiang.work/tags/2019%E7%A0%94%E7%A9%B6%E7%94%9FE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Vue入门&amp;注意事项</title>
    <link href="https://hezhaoxiang.work/2019/learn-vue01/"/>
    <id>https://hezhaoxiang.work/2019/learn-vue01/</id>
    <published>2019-11-01T13:06:00.000Z</published>
    <updated>2019-12-10T11:33:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><ul><li><p>vue是前端开发中交为常用的框架，</p></li><li><p>vue-cli是vue的脚手架工具，具有所占内存少、开发高效等特点，简单说vue-cli使得vue开发更简单。</p></li><li><p>cli：command-line-interface命令行界面（字符用户界面）</p><h2 id="二、安装环境及创建项目"><a href="#二、安装环境及创建项目" class="headerlink" title="二、安装环境及创建项目"></a>二、安装环境及创建项目</h2></li></ul><p>1、安装环境</p><ul><li>npm：node package manager，node的包管理器。推荐使用淘宝镜像来安装npm，官方网速太慢。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -gd express --registry=http://registry.npm.taobao.org</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span></pre></td></tr></table></figure>2、创建项目</li><li>创建vue-cli2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">vue init webpack 项目名字 <span class="comment">#创建vue-cli2的项目:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm run dev <span class="comment">#每次启动VUE服务器</span></span></pre></td></tr></table></figure><ul><li>创建vue-cli3</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">vue create 项目名字 <span class="comment">#创建</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">vue run serve    <span class="comment">#运行</span></span></pre></td></tr></table></figure><ul><li>二者区别：cli3中取消了webpack，框架结构更简单，推荐使用cli3。</li><li>注意：创建vue项目时先不要选择eslint！真的费事！！eslint是用于校验js语法，js写的不规范一直警告报错,修改过package.json，仍然无果，最后重建项目；每次打开vue项目时在cmd中进入到相应文件夹中，运行 vue run serve即可，在浏览器中可查看。一般地址为localhost:8080</li></ul><p>##三、报错及解决<br>This dependency was not found:* app.js?vue&amp;type=script&amp;lang=js&amp; in ./src/App.vue<br>To install it, you can run: npm install –save app.js?vue&amp;type=script&amp;lang=js&amp;<br><img src="https://img-blog.csdnimg.cn/20191128212909590.png" alt=""></p><h2 id="可能报错原因"><a href="#可能报错原因" class="headerlink" title="可能报错原因"></a>可能报错原因</h2><p><strong>1、在APP.vue中需要引入app.js文件，但是无法找到该文件</strong><br>此时应当考虑js文件引入的路径是否正确，我在这个问题上找了老半天，就是因为路径问题；<br><strong>报错时：在App.vue中是这样的</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;script src="app.js"&gt;&lt;/script&gt;</span></pre></td></tr></table></figure><p><strong>修改后：是这样的</strong>（./  之差）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;script src="./app.js"&gt;&lt;/script&gt;</span></pre></td></tr></table></figure><p><strong>2、在app.js中需要引入其他vue文件</strong><br>在项目重启后，app.js找不到当时引用的vue文件了，可能是在项目重启后引用 的vue文件默认为和app.js同一路径，此时需要修改vue的文件路径，重新import<br>修改前：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AppHeader <span class="keyword">from</span> <span class="string">"./components/AppHeader"</span>;</span></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AppHeader <span class="keyword">from</span> <span class="string">"./components/AppHeader.vue"</span>;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot; class=&quot;headerlink&quot; title=&quot;一、简介&quot;&gt;&lt;/a&gt;一、简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;vue是前端开发中交为常用的框架，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vue-cli是vue的脚手架工具，
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Vue学习" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Vue" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/Vue/"/>
    
    
      <category term="Vue" scheme="https://hezhaoxiang.work/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>web--2048小游戏复现（慕课网）</title>
    <link href="https://hezhaoxiang.work/2019/howtodo-2048demo/"/>
    <id>https://hezhaoxiang.work/2019/howtodo-2048demo/</id>
    <published>2019-11-01T13:06:00.000Z</published>
    <updated>2020-09-07T19:02:09.325Z</updated>
    
    <content type="html"><![CDATA[<p>这周断断续续完成了2048小游戏的网页版，这里主要讲这款游戏的逻辑和代码实现。<br>参考：慕课网2048私人订制  <a href="https://www.imooc.com/learn/76" target="_blank" rel="noopener">https://www.imooc.com/learn/76</a><br>对着视频把源码敲了一遍，这里作一个思路整理。</p><h2 id="一、整体思路"><a href="#一、整体思路" class="headerlink" title="一、整体思路"></a>一、整体思路</h2><p>1、游戏页面结构及样式<br>2、2048游戏逻辑<br>3、手机端优化<br>思路可以划分为上三步，在第一步中，首先规划好整体的排版。<br><img src="https://img-blog.csdnimg.cn/20191102193244964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt=""></p><p>页面内容包括2048header、游戏开始button、得分字段<p>、整个4*4方格grid-container。在container中每一个cell后期都要绑定一个number。</p><h2 id="二、游戏页面结构及样式"><a href="#二、游戏页面结构及样式" class="headerlink" title="二、游戏页面结构及样式"></a>二、游戏页面结构及样式</h2><p>2048，开始、得分<br>设置text-align：center；margin左右auto居中，字体背景颜色等；</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;2048&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;a href="javascrpit:newgame();"&gt;开始&lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;p&gt;得分&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;/header&gt;</span></pre></td></tr></table></figure><p>4*4方格,盒子模型</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;div id="grid-container"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;div id="grid-cell-0-0&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">//grid-cell-0-0到3-3</span></pre></td></tr></table></figure><p>container设置width、height、background，bord-radius边框，padding，margin、position（relative相对定位，相当于浮动）<br>grid-cell设置width，height、background-color、position（absolute绝对定位，可以被覆盖）<br>number-cell覆盖每个grid-cell，，其中的数字为border-number，初使为0</p><h2 id="三、2048游戏逻辑"><a href="#三、2048游戏逻辑" class="headerlink" title="三、2048游戏逻辑"></a>三、2048游戏逻辑</h2><p>1、newgame包括：init初始化游戏，生成gridcell4*4，number-cell清零，随机两个位置，generateOneNumber两次。<br>（0）生成页面结构后，加载DOM（文档对象模型）。通过$(document).ready()完成，ready事件在生成html标签、元素，显示CSS样式后实现。在ready（）事件中执行newgame函数，该函数链接到《开始》按钮。<br>（1）init：通过类选择器number-cell  $（.number-cell).remove()清零，对grid-container中添加number-cell，number-cell中的数字都存在board【】【】二维数组中。<br>（2）generateOneNumber中随机生成两个位置，和随机2或4，<br>board[randx][randy]=randNumber;</p><p>2、moveLeft、moveRight、moveUp、moveDown键盘操作。moveLeft发生，所有数字左移，相同数字求和。<br>（0）按下键盘的↑↓←→由$(document).keydown(）监听，通过switch–case决定运行moveLeft还是moveRight。<br>（1）<strong>！！！！！重点来了！</strong>moveLeft发生，所有数字左移。<br>两重for循环让每一个board[i][j]都左移（最左侧一列不能移动）<br>移动的前提是board[i][j]！=0，board[i][k]！=0&amp;&amp;在左移的这段（k~j）距离，不能有阻挡（canMoveLeft）。<br>（2）if 新位置为0，替换，elseif 新位置与board[i][j]相等，即相加。<br>（3）向右，上、下思路一样，判断移动的这段距离无阻挡，然后相加或替换。<br>3、绑定分数，定义score变量，当board[i][k] +=board[i][j]时，score+=board[i][k]；<br>“得分”的id标签为score，通过选择器$(‘#score’).text(score)使得在得分：0处显示分数。<br>4、game over，判断所有border-number不为零（没有空格），且canMoveLeft等四个函数return false（不能移动）。</p><h2 id="四、手机端优化"><a href="#四、手机端优化" class="headerlink" title="四、手机端优化"></a>四、手机端优化</h2><p>（0）在手机上与pc端的主要区别：页面大小、控制方式（按键盘和触控）<br>（1）为了适应手机和pc，加一个获取屏幕大小的函数documentWidth=window.screen.availWidth,if 屏幕宽度大于500像素，认为是PC，grid-container按500像素显示，小于500，按手机来自适应。width和height按%百分比显示。<br>（2）触控用document.addEventListener监听，包括touchstart、touchmove和touchend。<br>（3）touchstart获取手指初始位置；touchmove是优化，使得手指点击无效；touchend获取手指离开屏幕的位置，通过xy坐标和滑动产生的位移来判断，执行moveLeft等上下左右四个函数。</p><p>注：bug修改<br>在一排四个格子出现2248这样的情况下，左移结果应该是4480，但是在三、2、（2）中，结果是16000，应该添加hasConflicted二维数组，判断是否加过，保证只加一次。<br>最后，附上慕课中给的源代码，仅作少量修改，侵删<br>整体结构：<br><img src="https://img-blog.csdnimg.cn/20191101171415310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNTQ1OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>index.html</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;html lang="en"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;meta charset="UTF-8"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &lt;meta name="viewport"</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">          content="</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            width=device_value,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            height=device_value,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            initial-scale=1.0,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            minimum-scale=0.9,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            maxmum-scale=1.0,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;!--            //用户可以缩小或放大屏幕尺寸的最小最大值--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            user-scalable = yes"</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">          /&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &lt;link rel="stylesheet" type="text/css" href="2048.css"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&lt;!--    &lt;script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.min.js"&gt;&lt;/script&gt;--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&lt;!--    &lt;script type="text/javascript" src="http://libs.baidu.com/jquery/1.9.0/jquery.min.js"&gt;&lt;/script&gt;--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &lt;script type="text/javascript" src="jquery.min.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &lt;script type="text/javascript" src="main2048.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &lt;script type="text/javascript" src="showanimation.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &lt;script type="text/javascript" src="support2048.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &lt;<span class="selector-tag">header</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        &lt;h1&gt;2048&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &lt;a href="javascript:newgame();" id="newgamebutton"&gt;开始&lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        &lt;p&gt;得分: &lt;span id="score"&gt;0&lt;/span&gt;  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &lt;/header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &lt;div id="grid-container"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-0-0"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-0-1"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-0-2"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-0-3"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-1-0"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-1-1"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-1-2"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-1-3"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-2-0"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-2-1"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-2-2"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-2-3"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-3-0"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-3-1"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-3-2"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        &lt;div class="grid-cell" id="grid-cell-3-3"&gt;&lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &lt;/div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--MVC</span>结构：<span class="selector-tag">Model</span>模型、<span class="selector-tag">visual</span>界面<span class="selector-tag">UI</span>、<span class="selector-tag">Control</span>逻辑控制<span class="selector-tag">--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>待优化：<span class="selector-tag">--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--1</span>、<span class="selector-tag">game</span> <span class="selector-tag">over--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--2</span>、最高得分<span class="selector-tag">--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--3</span>、加分动画<span class="selector-tag">--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>可以通过<span class="selector-tag">phoneGap</span>将<span class="selector-tag">web</span> <span class="selector-tag">APP</span>转换为<span class="selector-tag">native</span> <span class="selector-tag">app--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>网站发布：<span class="selector-tag">dropBox</span>&amp;<span class="selector-tag">dropPages--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>或者发布方式：<span class="selector-tag">nginx</span>+花生壳，存在<span class="selector-tag">nginx</span>中即可。<span class="selector-tag">--</span>&gt;</span></pre></td></tr></table></figure><p>2048.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">text-align</span>: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">h1</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-family</span>: Arial;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-weight</span>:bold ;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-id">#newgamebutton</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">10px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*background-color: #9efff4;*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">background-color</span>: chocolate;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-family</span>: Arial;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">color</span>: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">text-decoration</span>: none;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-id">#newgamebutton</span><span class="selector-pseudo">:hover</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">background-color</span>: cyan;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">p</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-family</span>:Arial;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#grid-container</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">width</span>:<span class="number">460px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">height</span>: <span class="number">460px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">padding</span>:<span class="number">20px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*上下左右各自向外20px，盒子为500*500*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*background-color: #bbada0;*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">background-color</span>: <span class="number">#9efff4</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(22,27,255,0.9);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">position</span>: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grid-cell</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*background-color: #ccc0b3;*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">background-color</span>: yellowgreen;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">position</span>: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.number-cell</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">border-radius</span>:<span class="number">6px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-family</span>: Arial;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-weight</span>: bold;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">font-height</span>:<span class="number">100px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">text-align</span>:center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">position</span>:absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>main2048.js</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var board = new Array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">var score =0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">var hasConflicted = new Array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">//用于判断每个小格子是否发生了变化</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">//游戏初始化---------------------------------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$(document).ready(function()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">prepareForMobile</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">newgame</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">prepareForMobile</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    if( documentWidth &gt; 500 )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        gridContainerWidth = 500;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        cellSpace = 20;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        cellSideLength = 100;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    $('#grid-container').css('width',gridContainerWidth-2*cellSpace);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    $('#grid-container').css('height',gridContainerWidth-2*cellSpace);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    $('#grid-container').css('padding',cellSpace);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    $('#grid-container').css('border-radius',0.02*gridContainerWidth)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    $('.grid-cell').css('width',cellSideLength);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    $('.grid-cell').css('height',cellSideLength);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    $('.grid-cell').css('border-radius',0.02*cellSideLength);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">newgame</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    //初始化棋盘格</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">init</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    //在随机两个格子生成数字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">generateOneNumber</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">generateOneNumber</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">init</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    for (var i=0; i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        for (var j=0;j&lt;4;j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            var gridCell=$('#grid-cell-'+i+"-"+j);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            gridCell.css('top', getPosTop(i, j));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            gridCell.css('left', getPosLeft(i, j));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            //每个方格的位置由这两个函数决定，在support2048中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    for(var i = 0;i&lt;4;i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        board[i]=new Array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        hasConflicted[i] = new Array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        for(var j=0;j&lt;4;j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            board[i][j]=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            hasConflicted[i][j]= false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">updateBoardView</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    score = 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span>  <span class="selector-tag">updateBoardView</span>()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    $(".number-cell").remove();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    // 删除当前所有方格中的值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    for (var i=0;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        for (var j=0;j&lt;4;j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">            $("#grid-container").append('&lt;div class="number-cell" id="number-cell-'+i+'-'+j+'"&gt;&lt;/div&gt;');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">            var theNumberCell = $('#number-cell-'+i+'-'+j);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]==0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('width','0px');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('height','0px');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('top',getPosTop(i, j)+cellSideLength/2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('left',getPosLeft(i, j)+cellSideLength/2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">            &#125;<span class="selector-tag">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">                // 不为零时用number-cell代替gridcell</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('width',cellSideLength);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('height',cellSideLength);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('top',getPosTop(i, j));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('left',getPosLeft(i, j));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('background-color',getNumberBackgroudColor(board[i][j]));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">                theNumberCell.css('color',getNumberColor(board[i][j]));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">                // 背景色和前景色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">theNumberCell</span><span class="selector-class">.text</span>(<span class="selector-tag">board</span><span class="selector-attr">[i]</span><span class="selector-attr">[j]</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">            hasConflicted[i][j]= false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">    $('.number-cell').css('line-height',cellSideLength+'px');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">    $('.number-cell').css('font-size',0.6*cellSideLength+'px');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">function generateOneNumber()&#123;//先随机找一个位置，再在这个位置上赋值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">if</span> (<span class="selector-tag">nospace</span>(<span class="selector-tag">board</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    //随机一个位置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">    var randx=parseInt(Math.floor(Math.random()*4));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">    var randy=parseInt(Math.floor(Math.random()*4));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">      //产生0-4直接的浮点数，floor向下取整0123,parseInt强制类型转换为int</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">    var time=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">    while(time&lt;30)&#123; //===========================================================不懂</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">        if (board[randx][randy]==0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">        randx=parseInt(Math.floor(Math.random()*4));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">        randy=parseInt(Math.floor(Math.random()*4));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">time</span>++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">if</span>(<span class="selector-tag">time</span>&gt;30)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">        for(var i=0;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">            for(var j=0;j&lt;4;j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">                if(board[i][j]==0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">                    randx=i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">                    randy=j;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">    //随机一个数字2,4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">    var randNumber = Math.random() &lt;0.5? 2:4;//随机数小于0.5为2，大于0.5为4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">    //显示</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">    board[randx][randy]=randNumber;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">showNumberWithAnimation</span>(<span class="selector-tag">randx</span>, <span class="selector-tag">randy</span>, <span class="selector-tag">randNumber</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">$(document).keydown(function (event) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">    event.preventDefault();//阻挡按键本来会产生的效果，这里防止屏幕滚动条上下移动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">switch</span> (<span class="selector-tag">event</span><span class="selector-class">.keyCode</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">        case 37: //left,向左移动，生成新的数，判断游戏是否结束</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveLeft</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">                //设置延时，让alert有出现 的效果</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">        case 38://up</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveUp</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">        case 39://right</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveRight</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line">        case 40://down</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveDown</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">default</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line">&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line">document.addEventListener('touchstart',function (event) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line">    startx=event.touches[0].pageX;//event.touches获取多个手指触碰屏幕的信息【0】为一个手指</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">    starty=event.touches[0].pageY;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line">document.addEventListener('touchmove',function (event) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">156</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">event</span><span class="selector-class">.preventDefault</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">157</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">158</span></pre></td><td class="code"><pre><span class="line">document.addEventListener('touchend',function (event) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">159</span></pre></td><td class="code"><pre><span class="line">    endx=event.changedTouches[0].pageX;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">160</span></pre></td><td class="code"><pre><span class="line">    endy=event.changedTouches[0].pageY;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">161</span></pre></td><td class="code"><pre><span class="line">    var deltax=endx-startx;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">162</span></pre></td><td class="code"><pre><span class="line">    var deltay=endy-starty;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">163</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">164</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">if</span>(<span class="selector-tag">Math</span><span class="selector-class">.abs</span>(<span class="selector-tag">deltax</span>)&lt;0<span class="selector-class">.3</span>*<span class="selector-tag">documentWidth</span> &amp;&amp; <span class="selector-tag">Math</span><span class="selector-class">.abs</span>(<span class="selector-tag">deltay</span>)&lt;0<span class="selector-class">.3</span>*<span class="selector-tag">documentWidth</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">165</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">166</span></pre></td><td class="code"><pre><span class="line">    //x</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">167</span></pre></td><td class="code"><pre><span class="line">    if(Math.abs(deltax)&gt;=Math.abs(deltay))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">168</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">if</span>(<span class="selector-tag">deltax</span>&gt;0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">169</span></pre></td><td class="code"><pre><span class="line">            //向右</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">170</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveRight</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">171</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">172</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">173</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">174</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="selector-tag">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">175</span></pre></td><td class="code"><pre><span class="line">            //向左</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">176</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveLeft</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">177</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">178</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">179</span></pre></td><td class="code"><pre><span class="line">                //设置延时，让alert有出现 的效果</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">180</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">181</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">182</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">183</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">184</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">185</span></pre></td><td class="code"><pre><span class="line">        //y</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">186</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">if</span>(<span class="selector-tag">deltay</span>&gt;0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">187</span></pre></td><td class="code"><pre><span class="line">            //向下</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">188</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveDown</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">189</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">190</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">191</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">192</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="selector-tag">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">193</span></pre></td><td class="code"><pre><span class="line">            //向上</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">194</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">if</span> (<span class="selector-tag">moveUp</span>())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">195</span></pre></td><td class="code"><pre><span class="line">                setTimeout("generateOneNumber()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">196</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">setTimeout</span>("<span class="selector-tag">isgameover</span>();",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">197</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">198</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">199</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">200</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">201</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">isgameover</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">202</span></pre></td><td class="code"><pre><span class="line">    if (nospace(board)&amp;&amp;nomove(board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">203</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">gameover</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">204</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">205</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">206</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">gameover</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">207</span></pre></td><td class="code"><pre><span class="line">    alert('Game Over');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">208</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">209</span></pre></td><td class="code"><pre><span class="line">//--------------------------------------------------------Left-------------------------------------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">210</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">moveLeft</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">211</span></pre></td><td class="code"><pre><span class="line">    if (!canMoveLeft(board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">212</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">213</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">214</span></pre></td><td class="code"><pre><span class="line">    //moveLeft</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">215</span></pre></td><td class="code"><pre><span class="line">    for (var i=0;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">216</span></pre></td><td class="code"><pre><span class="line">        for (var j=1;j&lt;4;j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">217</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]!=0)&#123;//不为0可以向左移动，移动要判断该行左侧是否空（或相等）且没有障碍物</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">218</span></pre></td><td class="code"><pre><span class="line">                for (var k=0;k&lt;j;k++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">219</span></pre></td><td class="code"><pre><span class="line">                    if (board[i][k]==0&amp;&amp;noBlockHorizontal(i, k, j, board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">220</span></pre></td><td class="code"><pre><span class="line">                        //move</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">221</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">i</span>, <span class="selector-tag">j</span>,<span class="selector-tag">i</span>, <span class="selector-tag">k</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">222</span></pre></td><td class="code"><pre><span class="line">                        board[i][k]=board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">223</span></pre></td><td class="code"><pre><span class="line">                        board[i][j]=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">224</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">225</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">226</span></pre></td><td class="code"><pre><span class="line">                    else if (board[i][k]==board[i][j] &amp;&amp;noBlockHorizontal(i, k, j, board)&amp;&amp; !hasConflicted[i][k])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">227</span></pre></td><td class="code"><pre><span class="line">                    // else if (board[i][k]==board[i][j] &amp;&amp;noBlockHorizontal(i, k, j, board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">228</span></pre></td><td class="code"><pre><span class="line">                        //hasConflicted[i][k]没变化过，即没有发生add</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">229</span></pre></td><td class="code"><pre><span class="line">                        //move</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">230</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">i</span>, <span class="selector-tag">j</span>,<span class="selector-tag">i</span>, <span class="selector-tag">k</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">231</span></pre></td><td class="code"><pre><span class="line">                        //add</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">232</span></pre></td><td class="code"><pre><span class="line">                        board[i][k] +=board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">233</span></pre></td><td class="code"><pre><span class="line">                        board[i][j]=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">234</span></pre></td><td class="code"><pre><span class="line">                        score+=board[i][k];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">235</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">updateScore</span>(<span class="selector-tag">score</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">236</span></pre></td><td class="code"><pre><span class="line">                        hasConflicted[i][k]=true;//只add一次</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">237</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">238</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">239</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">240</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">241</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">242</span></pre></td><td class="code"><pre><span class="line">    setTimeout("updateBoardView()",200);//设置更新在200ms后发生，move动画就可以显示</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">243</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">244</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">245</span></pre></td><td class="code"><pre><span class="line">//--------------------------------------------------------Right-------------------------------------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">246</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">247</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">moveRight</span>()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">248</span></pre></td><td class="code"><pre><span class="line">    if( !canMoveRight( board ) )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">249</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">250</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">251</span></pre></td><td class="code"><pre><span class="line">    //moveRight</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">252</span></pre></td><td class="code"><pre><span class="line">    for( var i = 0 ; i &lt; 4 ; i ++ )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">253</span></pre></td><td class="code"><pre><span class="line">        for( var j = 2 ; j &gt;= 0 ; j -- )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">254</span></pre></td><td class="code"><pre><span class="line">            if( board[i][j] != 0 )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">255</span></pre></td><td class="code"><pre><span class="line">                for( var k = 3 ; k &gt; j ; k -- )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">256</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">257</span></pre></td><td class="code"><pre><span class="line">                    if( board[i][k] == 0 &amp;&amp; noBlockHorizontal( i , j , k , board ) )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">258</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>( <span class="selector-tag">i</span> , <span class="selector-tag">j</span> , <span class="selector-tag">i</span> , <span class="selector-tag">k</span> );</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">259</span></pre></td><td class="code"><pre><span class="line">                        board[i][k] = board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">260</span></pre></td><td class="code"><pre><span class="line">                        board[i][j] = 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">261</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">262</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">263</span></pre></td><td class="code"><pre><span class="line">                    else if( board[i][k] == board[i][j] &amp;&amp; noBlockHorizontal( i , j , k , board )&amp;&amp; !hasConflicted[i][k] )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">264</span></pre></td><td class="code"><pre><span class="line">                    // else if( board[i][k] == board[i][j] &amp;&amp; noBlockHorizontal( i , j , k , board ))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">265</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>( <span class="selector-tag">i</span> , <span class="selector-tag">j</span> , <span class="selector-tag">i</span> , <span class="selector-tag">k</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">266</span></pre></td><td class="code"><pre><span class="line">                        board[i][k] *= 2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">267</span></pre></td><td class="code"><pre><span class="line">                        board[i][j] = 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">268</span></pre></td><td class="code"><pre><span class="line">                        score+=board[i][k];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">269</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">updateScore</span>(<span class="selector-tag">score</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">270</span></pre></td><td class="code"><pre><span class="line">                        hasConflicted[i][k]=true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">271</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">272</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">273</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">274</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">275</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">276</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">277</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">278</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">setTimeout</span>("<span class="selector-tag">updateBoardView</span>()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">279</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">280</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">281</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">moveUp</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">282</span></pre></td><td class="code"><pre><span class="line">    if (!canMoveUp(board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">283</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">284</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">285</span></pre></td><td class="code"><pre><span class="line">    //</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">286</span></pre></td><td class="code"><pre><span class="line">    for(var j=0;j&lt;4;j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">287</span></pre></td><td class="code"><pre><span class="line">        for (var i=1;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">288</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]!=0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">289</span></pre></td><td class="code"><pre><span class="line">                for (var k=0;k&lt;i;k++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">290</span></pre></td><td class="code"><pre><span class="line">                    if (board[k][j]==0 &amp;&amp; noBlockupdown(j, k, i, board)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">291</span></pre></td><td class="code"><pre><span class="line">                        //move</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">292</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">i</span>, <span class="selector-tag">j</span>, <span class="selector-tag">k</span>, <span class="selector-tag">j</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">293</span></pre></td><td class="code"><pre><span class="line">                        board[k][j] = board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">294</span></pre></td><td class="code"><pre><span class="line">                        board[i][j] = 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">295</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">296</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">297</span></pre></td><td class="code"><pre><span class="line">                    // else if (board[k][j]==board[i][j]&amp;&amp;noBlockupdown(j, k, i, board)&amp;&amp; !hasConflicted[k][j]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">298</span></pre></td><td class="code"><pre><span class="line">                    else if (board[k][j]==board[i][j]&amp;&amp;noBlockupdown(j, k, i, board)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">299</span></pre></td><td class="code"><pre><span class="line">                        //move</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">300</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">i</span>,<span class="selector-tag">j</span>, <span class="selector-tag">k</span>, <span class="selector-tag">j</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">301</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">302</span></pre></td><td class="code"><pre><span class="line">                        //add</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">303</span></pre></td><td class="code"><pre><span class="line">                        board[k][j]+=board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">304</span></pre></td><td class="code"><pre><span class="line">                        board[i][j]=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">305</span></pre></td><td class="code"><pre><span class="line">                        score+=board[k][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">306</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">updateScore</span>(<span class="selector-tag">score</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">307</span></pre></td><td class="code"><pre><span class="line">                        // hasConflicted[k][j]=true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">308</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">309</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">310</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">311</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">setTimeout</span>("<span class="selector-tag">updateBoardView</span>()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">312</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">313</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">314</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">moveDown</span>() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">315</span></pre></td><td class="code"><pre><span class="line">    if (!canMoveDown(board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">316</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">317</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">318</span></pre></td><td class="code"><pre><span class="line">    //</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">319</span></pre></td><td class="code"><pre><span class="line">    for (var j=0;j&lt;4;j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">320</span></pre></td><td class="code"><pre><span class="line">        for (var i=2;i&gt;=0;i--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">321</span></pre></td><td class="code"><pre><span class="line">            if(board[i][j]!=0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">322</span></pre></td><td class="code"><pre><span class="line">                for (var k=3;k&gt;i;k--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">323</span></pre></td><td class="code"><pre><span class="line">                    if (board[k][j]==0&amp;&amp;noBlockupdown(j, i, k, board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">324</span></pre></td><td class="code"><pre><span class="line">                        //move</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">325</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">i</span>, <span class="selector-tag">j</span>, <span class="selector-tag">k</span>, <span class="selector-tag">j</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">326</span></pre></td><td class="code"><pre><span class="line">                        board[k][j]=board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">327</span></pre></td><td class="code"><pre><span class="line">                        board[i][j]=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">328</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">329</span></pre></td><td class="code"><pre><span class="line">                    // else if (board[i][j]==board[k][j]&amp;&amp;noBlockupdown(j, i, k, board) &amp;&amp; !hasConflicted[k][j])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">330</span></pre></td><td class="code"><pre><span class="line">                    else if (board[i][j]==board[k][j]&amp;&amp;noBlockupdown(j, i, k, board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">331</span></pre></td><td class="code"><pre><span class="line">                        //move,add</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">332</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">i</span>, <span class="selector-tag">j</span>, <span class="selector-tag">k</span>, <span class="selector-tag">j</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">333</span></pre></td><td class="code"><pre><span class="line">                        board[k][j]+=board[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">334</span></pre></td><td class="code"><pre><span class="line">                        board[i][j]=0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">335</span></pre></td><td class="code"><pre><span class="line">                        score+=board[k][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">336</span></pre></td><td class="code"><pre><span class="line">                        <span class="selector-tag">updateScore</span>(<span class="selector-tag">score</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">337</span></pre></td><td class="code"><pre><span class="line">                        // hasConflicted[k][j]=true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">338</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">339</span></pre></td><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">340</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">341</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">setTimeout</span>("<span class="selector-tag">updateBoardView</span>()",200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">342</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">343</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">344</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>support2048.js</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">documentWidth=window.screen.availWidth;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">gridContainerWidth=0.92*documentWidth;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">cellSideLength=0.18*documentWidth;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">cellSpace=0.04*documentWidth;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">getPosTop</span>(<span class="selector-tag">i</span>,<span class="selector-tag">j</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    return cellSpace + (cellSpace+cellSideLength)*i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">getPosLeft</span>(<span class="selector-tag">i</span>,<span class="selector-tag">j</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    return cellSpace + (cellSpace+cellSideLength)*j;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">getNumberBackgroudColor</span>(<span class="selector-tag">number</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    switch( number )&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 2<span class="selector-pseudo">:return</span> "<span class="selector-id">#eee4da</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 4<span class="selector-pseudo">:return</span> "<span class="selector-id">#ede0c8</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 8<span class="selector-pseudo">:return</span> "<span class="selector-id">#f2b179</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 16<span class="selector-pseudo">:return</span> "<span class="selector-id">#f59563</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 32<span class="selector-pseudo">:return</span> "<span class="selector-id">#f67c5f</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 64<span class="selector-pseudo">:return</span> "<span class="selector-id">#f65e3b</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 128<span class="selector-pseudo">:return</span> "<span class="selector-id">#edcf72</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 256<span class="selector-pseudo">:return</span> "<span class="selector-id">#edcc61</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 512<span class="selector-pseudo">:return</span> "<span class="selector-id">#9c0</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 1024<span class="selector-pseudo">:return</span> "<span class="selector-id">#33b5e5</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 2048<span class="selector-pseudo">:return</span> "<span class="selector-id">#09c</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 4096<span class="selector-pseudo">:return</span> "<span class="selector-id">#a6c</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">case</span> 8192<span class="selector-pseudo">:return</span> "<span class="selector-id">#93c</span>";<span class="selector-tag">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> "<span class="selector-tag">black</span>";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">getNumberColor</span>(<span class="selector-tag">number</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    if (number&lt;= 4)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> "<span class="selector-id">#776e65</span>";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> "<span class="selector-tag">white</span>";</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">nospace</span>(<span class="selector-tag">board</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    for (var i=0;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        for (var j=0;j&lt;4;j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]==0)//默认初始值为0，为0说明还有空格</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">                <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">noBlockHorizontal</span>(<span class="selector-tag">row</span>, <span class="selector-tag">col1</span>,<span class="selector-tag">col2</span>,<span class="selector-tag">board</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    for (var i=col1+1;i&lt;col2;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        if (board[row][i]!=0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">noBlockupdown</span>(<span class="selector-tag">col</span>, <span class="selector-tag">row1</span>,<span class="selector-tag">row2</span>,<span class="selector-tag">board</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    for (var i=row1+1;i&lt;row2;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        if (board[i][col]!=0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">            <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">canMoveLeft</span>(<span class="selector-tag">board</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    for (var i=0;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        for (var j=1;j&lt;4;j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]!=0)//这个点不为0判断要向左移动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">                if (board[i][j-1]==0 || board[i][j-1]==board[i][j])//左侧是空的或者左右相等</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">                    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">canMoveRight</span>(<span class="selector-tag">board</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">    for (var i=0;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">        for (var j=2;j&gt;=0;j--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]!=0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">                if (board[i][j+1]==board[i][j] || board[i][j+1]==0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">                    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">canMoveUp</span>(<span class="selector-tag">board</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">    for (var j=0;j&lt;4;j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">        for (var i=1;i&lt;4;i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">            if (board[i][j]!=0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">                if (board[i-1][j]==0 || board[i][j]==board[i-1][j])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">                    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">canMoveDown</span>(<span class="selector-tag">board</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">    for (var j=0;j&lt;4;j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">        for (var i=2;i&gt;=0;i--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">            if(board[i][j]!=0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">                if (board[i+1][j]==board[i][j] || board[i+1][j]==0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">                    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">nomove</span>(<span class="selector-tag">board</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">    if (canMoveLeft(board) || canMoveRight(board) || canMoveUp(board) || canMoveDown(board))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>showanimation.js 移动的动画效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">showNumberWithAnimation</span>(<span class="selector-tag">i</span>, <span class="selector-tag">j</span>, <span class="selector-tag">randNumber</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    var numberCell=$('#number-cell-'+i+"-"+j);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    numberCell.css('background-color', getNumberBackgroudColor(randNumber));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    numberCell.css('color', getNumberColor(randNumber));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">numberCell</span><span class="selector-class">.text</span>(<span class="selector-tag">randNumber</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">numberCell</span><span class="selector-class">.animate</span>(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        // animate函数是jQUERY中的动画函数,动画渐变50ms</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">width</span><span class="selector-pseudo">:cellSideLength</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">height</span><span class="selector-pseudo">:cellSideLength</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">top</span><span class="selector-pseudo">:getPosTop(i</span>, <span class="selector-tag">j</span>),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="selector-tag">left</span><span class="selector-pseudo">:getPosLeft(i</span>, <span class="selector-tag">j</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;,50);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">showMoveAnimation</span>(<span class="selector-tag">fromx</span>, <span class="selector-tag">fromy</span>,<span class="selector-tag">tox</span>, <span class="selector-tag">toy</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    var numberCell = $('#number-cell-'+fromx+'-'+fromy);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">numberCell</span><span class="selector-class">.animate</span>(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">top</span>:<span class="built_in">getPosTop</span>(tox, toy),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        left:<span class="built_in">getPosLeft</span>(tox, toy)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;,200);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">updateScore</span>(<span class="selector-tag">score</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    $('#score').text(score);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这周断断续续完成了2048小游戏的网页版，这里主要讲这款游戏的逻辑和代码实现。&lt;br&gt;参考：慕课网2048私人订制  &lt;a href=&quot;https://www.imooc.com/learn/76&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https:
      
    
    </summary>
    
      <category term="Demo" scheme="https://hezhaoxiang.work/categories/Demo/"/>
    
      <category term="2048小游戏" scheme="https://hezhaoxiang.work/categories/Demo/2048%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="Demo" scheme="https://hezhaoxiang.work/tags/Demo/"/>
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>web--JavaScript（四）jQuery</title>
    <link href="https://hezhaoxiang.work/2019/learnjs04-jquery/"/>
    <id>https://hezhaoxiang.work/2019/learnjs04-jquery/</id>
    <published>2019-10-22T11:48:00.000Z</published>
    <updated>2019-12-10T07:12:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-jquery-查找html元素的方式"><a href="#一-jquery-查找html元素的方式" class="headerlink" title="(一)jquery 查找html元素的方式"></a>(一)jquery 查找html元素的方式</h2><p>简单来说，jQuery是js的一个库，来完善js的功能。</p><p><strong>查找html元素的方式：id、class、字段p、css四种</strong><br>jQuery用来处理浏览器不兼容，简化 HTML DOM 操作、事件处理、动画和 Ajax。<br>在09年以后，多数jQuery的程序都可以用js直接写</p><h2 id="（二）jquery与-html"><a href="#（二）jquery与-html" class="headerlink" title="（二）jquery与 html"></a>（二）jquery与 html</h2><p>1、设置文本内容，对文本操作：myElement.text(“第n个文本”);<br>设置html元素内容，对html的元素操作：myElement.html(<p>第n个文本</p>“”);<br>2、获取内容<br>获取文本 var myelement=$(“#id3”); var mytext=myelement.text(); $(“#demo”).text(mytext);<br>获取html                          var content=my.html(); $(“demo”).html(content);</p><h2 id="（三）jquery与-css"><a href="#（三）jquery与-css" class="headerlink" title="（三）jquery与 css"></a>（三）jquery与 css</h2><p>1、隐藏元素<br>$(“#id1”).hide();         jquery方式<br>my.style.display=”none”;  CSS方式<br>2、显示元素<br>my.show();<br>my.style.display=””;<br>3、更改样式字体大小<br>my.css(“font-size”,”35px”);<br>my.style.fontSize=”35px”;</p><h2 id="（四）jquery与-DOM"><a href="#（四）jquery与-DOM" class="headerlink" title="（四）jquery与 DOM"></a>（四）jquery与 DOM</h2><p>1、删除元素<br>$(“#id”).remove();<br>element.parentNode.removeChild(element);<br>2、获取父元素<br>var myParent = myElement.parent();<br>var myParent = myElement.parentNode();</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;html lang="en"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;meta charset="UTF-8"&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;jQuery&lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &lt;script src="https://code.jquery.com/jquery-3.3.1.min.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>    引用<span class="selector-tag">jquery</span>库<span class="selector-tag">--</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;p id="id1"&gt;第1个文本p&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;p id="id2"&gt;第2个文本p&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;p id="id3"&gt;第3个文本p&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&lt;p id="demo"&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    //var p1= document.getElementById("id1");</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    //document.getElementById("demo").innerHTML = "新文本："+p1.innerHTML;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    $(document).ready(function () &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        var myElement=$("#id1");</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        // 通过id来查找元素</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        var myElement2=$("p");</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        //通过字段p，或者通过类名.class1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        //var myelement3=$("p.classp")</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        //通过css选择器方式查找，类名都定义为classp。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        $("#demo").text("新文本：" + myElement[2].innerHTML);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        // 显示输出</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-jquery-查找html元素的方式&quot;&gt;&lt;a href=&quot;#一-jquery-查找html元素的方式&quot; class=&quot;headerlink&quot; title=&quot;(一)jquery 查找html元素的方式&quot;&gt;&lt;/a&gt;(一)jquery 查找html元素的方式&lt;/h2
      
    
    </summary>
    
      <category term="web前端" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/categories/web%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://hezhaoxiang.work/tags/JavaScript/"/>
    
  </entry>
  
</feed>
